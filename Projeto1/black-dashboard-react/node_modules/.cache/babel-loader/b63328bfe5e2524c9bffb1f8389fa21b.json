{"ast":null,"code":"import _regeneratorRuntime from \"/home/noone/Desktop/TQS/Projeto1/black-dashboard-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/noone/Desktop/TQS/Projeto1/black-dashboard-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/home/noone/Desktop/TQS/Projeto1/black-dashboard-react/src/components/Navbars/AdminNavbar.js\";\nimport React from \"react\"; // nodejs library that concatenates classes\n\nimport classNames from \"classnames\";\nimport debounce from 'lodash/debounce';\nimport axios from 'axios';\nimport NotificationAlert from \"react-notification-alert\"; // reactstrap components\n\nimport { Button, Collapse, DropdownToggle, DropdownMenu, DropdownItem, UncontrolledDropdown, Input, InputGroup, NavbarBrand, Navbar, NavLink, Nav, Container, Modal } from \"reactstrap\";\nconst REST_HOST = process.env.REACT_APP_REST_HOST;\n\nclass AdminNavbar extends React.Component {\n  constructor(props) {\n    var _this;\n\n    super(props);\n    _this = this;\n\n    this.updateColor = () => {\n      if (window.innerWidth < 993 && this.state.collapseOpen) {\n        this.setState({\n          color: \"bg-white\"\n        });\n      } else {\n        this.setState({\n          color: \"navbar-transparent\"\n        });\n      }\n    };\n\n    this.toggleCollapse = () => {\n      if (this.state.collapseOpen) {\n        this.setState({\n          color: \"navbar-transparent\"\n        });\n      } else {\n        this.setState({\n          color: \"bg-white\"\n        });\n      }\n\n      this.setState({\n        collapseOpen: !this.state.collapseOpen\n      });\n    };\n\n    this.toggleModalSearch = () => {\n      this.setState({\n        modalSearch: !this.state.modalSearch,\n        search_list: []\n      });\n    };\n\n    this.getCities = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n        var _yield$axios$get, data, results;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!(_this.state.city.length < 3)) {\n                _context.next = 3;\n                break;\n              }\n\n              _this.renderErrorNotification([\"Nome da cidade deve conter pelo menos 3 caracteres\"]);\n\n              return _context.abrupt(\"return\");\n\n            case 3:\n              _context.next = 5;\n              return axios.get(\"\".concat(REST_HOST, \"/cities/\").concat(_this.state.city.toLowerCase()));\n\n            case 5:\n              _yield$axios$get = _context.sent;\n              data = _yield$axios$get.data;\n\n              if (data.length > 0 && data !== undefined) {\n                results = data.map(result => ({\n                  cityName: result.full_name,\n                  cityId: result.id,\n                  cityLatitude: result.latitude,\n                  cityLongitude: result.longitude\n                }));\n\n                _this.setState({\n                  search_list: results\n                });\n              }\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    this.debounceSearch = debounce(this.getCities, 1000);\n\n    this.toggleSearch = e => {\n      this.setState({\n        city: e.target.value,\n        search_list: []\n      });\n      this.debounceSearch();\n    };\n\n    this.getCity = e => {\n      const id = e.target.id;\n      const parts = id.split(',');\n      const latitude = parseFloat(parts[0]);\n      const longitude = parseFloat(parts[1]);\n      let city_name, city_id;\n\n      for (let i = 0; i < this.state.search_list.length; i++) {\n        let city = this.state.search_list[i];\n\n        if (city.cityLatitude === latitude && city.cityLongitude === longitude) {\n          city_name = city.cityName;\n          city_id = city.cityId;\n          break;\n        }\n      }\n\n      const city_data = {\n        cityName: city_name,\n        cityId: city_id,\n        cityLatitude: latitude,\n        cityLongitude: longitude\n      };\n      localStorage.setItem('city_data', JSON.stringify(city_data));\n      window.location.href = \"/admin/air\";\n    };\n\n    this.state = {\n      collapseOpen: false,\n      modalSearch: false,\n      color: \"navbar-transparent\",\n      city: '',\n      search_list: []\n    };\n  }\n\n  renderErrorNotification(errors, time) {\n    if (time === undefined) time = 5;\n    var options = {};\n    options = {\n      place: \"br\",\n      message: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }\n      }, errors.map(value => {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }\n        }, value);\n      })),\n      icon: \"tim-icons icon-alert-circle-exc\",\n      type: \"danger\",\n      autoDismiss: time\n    };\n    this.refs.notificationAlert.notificationAlert(options);\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateColor);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateColor);\n  } // function that adds color white/transparent to the navbar on resize (this is for the collapse)\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Navbar, {\n      className: classNames(\"navbar-absolute\", this.state.color),\n      expand: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"navbar-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames(\"navbar-toggle d-inline\", {\n        toggled: this.props.sidebarOpened\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"navbar-toggler\",\n      type: \"button\",\n      onClick: this.props.toggleSidebar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"navbar-toggler-bar bar1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"navbar-toggler-bar bar2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"navbar-toggler-bar bar3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(NavbarBrand, {\n      href: \"#pablo\",\n      onClick: e => e.preventDefault(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 29\n      }\n    }, this.props.brandText)), /*#__PURE__*/React.createElement(\"button\", {\n      \"aria-expanded\": false,\n      \"aria-label\": \"Toggle navigation\",\n      className: \"navbar-toggler\",\n      \"data-target\": \"#navigation\",\n      \"data-toggle\": \"collapse\",\n      id: \"navigation\",\n      type: \"button\",\n      onClick: this.toggleCollapse,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"navbar-toggler-bar navbar-kebab\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"navbar-toggler-bar navbar-kebab\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"navbar-toggler-bar navbar-kebab\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Collapse, {\n      navbar: true,\n      isOpen: this.state.collapseOpen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Nav, {\n      className: \"ml-auto\",\n      navbar: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"search-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"link\",\n      \"data-target\": \"#searchModal\",\n      \"data-toggle\": \"modal\",\n      id: \"search-button\",\n      onClick: this.toggleModalSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"tim-icons icon-zoom-split\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"d-lg-none d-md-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 41\n      }\n    }, \"Search\"))), /*#__PURE__*/React.createElement(UncontrolledDropdown, {\n      nav: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(DropdownToggle, {\n      caret: true,\n      color: \"default\",\n      \"data-toggle\": \"dropdown\",\n      nav: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"notification d-none d-lg-block d-xl-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"i\", {\n      className: \"tim-icons icon-sound-wave\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"d-lg-none\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 41\n      }\n    }, \"Notifications\")), /*#__PURE__*/React.createElement(DropdownMenu, {\n      className: \"dropdown-navbar\",\n      right: true,\n      tag: \"ul\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      tag: \"li\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(DropdownItem, {\n      className: \"nav-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 45\n      }\n    }, \"Mike John responded to your email\")), /*#__PURE__*/React.createElement(NavLink, {\n      tag: \"li\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(DropdownItem, {\n      className: \"nav-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 45\n      }\n    }, \"You have 5 more tasks\")), /*#__PURE__*/React.createElement(NavLink, {\n      tag: \"li\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(DropdownItem, {\n      className: \"nav-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 45\n      }\n    }, \"Your friend Michael is in town\")), /*#__PURE__*/React.createElement(NavLink, {\n      tag: \"li\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(DropdownItem, {\n      className: \"nav-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 45\n      }\n    }, \"Another notification\")), /*#__PURE__*/React.createElement(NavLink, {\n      tag: \"li\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(DropdownItem, {\n      className: \"nav-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 45\n      }\n    }, \"Another one\")))), /*#__PURE__*/React.createElement(UncontrolledDropdown, {\n      nav: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(DropdownToggle, {\n      caret: true,\n      color: \"default\",\n      \"data-toggle\": \"dropdown\",\n      nav: true,\n      onClick: e => e.preventDefault(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"photo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"...\",\n      src: require(\"assets/img/anime3.png\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(\"b\", {\n      className: \"caret d-none d-lg-block d-xl-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"d-lg-none\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 41\n      }\n    }, \"Log out\")), /*#__PURE__*/React.createElement(DropdownMenu, {\n      className: \"dropdown-navbar\",\n      right: true,\n      tag: \"ul\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      tag: \"li\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(DropdownItem, {\n      className: \"nav-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 45\n      }\n    }, \"Profile\")), /*#__PURE__*/React.createElement(NavLink, {\n      tag: \"li\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(DropdownItem, {\n      className: \"nav-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 45\n      }\n    }, \"Settings\")), /*#__PURE__*/React.createElement(DropdownItem, {\n      divider: true,\n      tag: \"li\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(NavLink, {\n      tag: \"li\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(DropdownItem, {\n      className: \"nav-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 45\n      }\n    }, \"Log out\")))), /*#__PURE__*/React.createElement(\"li\", {\n      className: \"separator d-lg-none\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 33\n      }\n    }))))), /*#__PURE__*/React.createElement(Modal, {\n      modalClassName: \"modal-search\",\n      isOpen: this.state.modalSearch,\n      toggle: this.toggleModalSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      id: \"inlineFormInputGroup\",\n      placeholder: \"SEARCH\",\n      type: \"text\",\n      onChange: this.toggleSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      \"aria-label\": \"Close\",\n      className: \"close\",\n      \"data-dismiss\": \"modal\",\n      type: \"button\",\n      onClick: this.toggleModalSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"tim-icons icon-simple-remove\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 29\n      }\n    }))), this.state.search_list.length > 0 && /*#__PURE__*/React.createElement(UncontrolledDropdown, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(DropdownToggle, {\n      color: \"default\",\n      \"data-toggle\": \"dropdown\",\n      nav: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 25\n      }\n    }, this.state.search_list.map((city, index) => {\n      const city_id = \"\".concat(city.cityLatitude, \",\").concat(city.cityLongitude);\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(NavLink, {\n        tag: \"li\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(DropdownItem, {\n        id: city_id,\n        className: \"nav-item\",\n        onClick: this.getCity,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 45\n        }\n      }, city.cityName)), /*#__PURE__*/React.createElement(DropdownItem, {\n        divider: true,\n        tag: \"li\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 41\n        }\n      }));\n    })))));\n  }\n\n}\n\nexport default AdminNavbar;","map":{"version":3,"sources":["/home/noone/Desktop/TQS/Projeto1/black-dashboard-react/src/components/Navbars/AdminNavbar.js"],"names":["React","classNames","debounce","axios","NotificationAlert","Button","Collapse","DropdownToggle","DropdownMenu","DropdownItem","UncontrolledDropdown","Input","InputGroup","NavbarBrand","Navbar","NavLink","Nav","Container","Modal","REST_HOST","process","env","REACT_APP_REST_HOST","AdminNavbar","Component","constructor","props","updateColor","window","innerWidth","state","collapseOpen","setState","color","toggleCollapse","toggleModalSearch","modalSearch","search_list","getCities","e","city","length","renderErrorNotification","get","toLowerCase","data","undefined","results","map","result","cityName","full_name","cityId","id","cityLatitude","latitude","cityLongitude","longitude","debounceSearch","toggleSearch","target","value","getCity","parts","split","parseFloat","city_name","city_id","i","city_data","localStorage","setItem","JSON","stringify","location","href","errors","time","options","place","message","icon","type","autoDismiss","refs","notificationAlert","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","toggled","sidebarOpened","toggleSidebar","preventDefault","brandText","require","index"],"mappings":"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","sourcesContent":["import React from \"react\";\n\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\nimport debounce from 'lodash/debounce';\nimport axios from 'axios';\nimport NotificationAlert from \"react-notification-alert\";\n// reactstrap components\nimport {\n    Button,\n    Collapse,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem,\n    UncontrolledDropdown,\n    Input,\n    InputGroup,\n    NavbarBrand,\n    Navbar,\n    NavLink,\n    Nav,\n    Container,\n    Modal\n} from \"reactstrap\";\n\nconst REST_HOST = process.env.REACT_APP_REST_HOST\n\n\nclass AdminNavbar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            collapseOpen: false,\n            modalSearch: false,\n            color: \"navbar-transparent\",\n            city: '',\n            search_list: []\n        };\n    }\n\n    renderErrorNotification(errors, time) {\n        if (time === undefined)\n            time = 5;\n        var options = {};\n\n        options = {\n            place: \"br\",\n            message: (\n                <div>\n                    {errors.map((value) => {\n                        return (\n                            <li>{value}</li>\n                        )\n                    })}\n                </div>\n            ),\n            icon: \"tim-icons icon-alert-circle-exc\",\n            type: \"danger\",\n            autoDismiss: time\n        };\n\n\n        this.refs.notificationAlert.notificationAlert(options);\n\n    }\n\n    componentDidMount() {\n        window.addEventListener(\"resize\", this.updateColor);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.updateColor);\n    }\n\n    // function that adds color white/transparent to the navbar on resize (this is for the collapse)\n    updateColor = () => {\n        if (window.innerWidth < 993 && this.state.collapseOpen) {\n            this.setState({\n                color: \"bg-white\"\n            });\n        } else {\n            this.setState({\n                color: \"navbar-transparent\"\n            });\n        }\n    };\n    // this function opens and closes the collapse on small devices\n    toggleCollapse = () => {\n        if (this.state.collapseOpen) {\n            this.setState({\n                color: \"navbar-transparent\"\n            });\n        } else {\n            this.setState({\n                color: \"bg-white\"\n            });\n        }\n        this.setState({\n            collapseOpen: !this.state.collapseOpen\n        });\n    };\n    // this function is to open the Search modal\n    toggleModalSearch = () => {\n        this.setState({\n            modalSearch: !this.state.modalSearch,\n            search_list: []\n        });\n    };\n\n\n    getCities = async (e) => {\n        if (this.state.city.length < 3) {\n            this.renderErrorNotification([\"Nome da cidade deve conter pelo menos 3 caracteres\"]);\n            return;\n        }\n        const {data} = await axios.get(`${REST_HOST}/cities/${this.state.city.toLowerCase()}`);\n        if (data.length > 0 && data !== undefined) {\n\n            const results = data.map(result => ({\n                cityName: result.full_name,\n                cityId: result.id,\n                cityLatitude: result.latitude,\n                cityLongitude: result.longitude\n\n            }));\n\n            this.setState({\n                search_list: results\n            });\n        }\n    };\n\n    debounceSearch = debounce(this.getCities, 1000);\n\n    toggleSearch = (e) => {\n        this.setState({city: e.target.value, search_list: []});\n        this.debounceSearch();\n    };\n\n    getCity = (e) => {\n        const id = e.target.id;\n\n        const parts = id.split(',');\n        const latitude = parseFloat(parts[0]);\n        const longitude = parseFloat(parts[1]);\n\n        let city_name, city_id;\n\n        for (let i = 0; i < this.state.search_list.length; i++) {\n            let city = this.state.search_list[i];\n            if (city.cityLatitude === latitude && city.cityLongitude === longitude) {\n                city_name = city.cityName;\n                city_id = city.cityId;\n                break;\n            }\n        }\n\n\n        const city_data = {\n            cityName: city_name,\n            cityId: city_id,\n            cityLatitude: latitude,\n            cityLongitude: longitude\n        }\n\n        localStorage.setItem('city_data', JSON.stringify(city_data));\n        window.location.href=\"/admin/air\"\n    };\n\n\n    render() {\n        return (\n            <>\n\n                <Navbar\n                    className={classNames(\"navbar-absolute\", this.state.color)}\n                    expand=\"lg\"\n                >\n                    <Container fluid>\n                        <div className=\"navbar-wrapper\">\n                            <div\n                                className={classNames(\"navbar-toggle d-inline\", {\n                                    toggled: this.props.sidebarOpened\n                                })}\n                            >\n                                <button\n                                    className=\"navbar-toggler\"\n                                    type=\"button\"\n                                    onClick={this.props.toggleSidebar}\n                                >\n                                    <span className=\"navbar-toggler-bar bar1\"/>\n                                    <span className=\"navbar-toggler-bar bar2\"/>\n                                    <span className=\"navbar-toggler-bar bar3\"/>\n                                </button>\n                            </div>\n                            <NavbarBrand href=\"#pablo\" onClick={e => e.preventDefault()}>\n                                {this.props.brandText}\n                            </NavbarBrand>\n                        </div>\n                        <button\n                            aria-expanded={false}\n                            aria-label=\"Toggle navigation\"\n                            className=\"navbar-toggler\"\n                            data-target=\"#navigation\"\n                            data-toggle=\"collapse\"\n                            id=\"navigation\"\n                            type=\"button\"\n                            onClick={this.toggleCollapse}\n                        >\n                            <span className=\"navbar-toggler-bar navbar-kebab\"/>\n                            <span className=\"navbar-toggler-bar navbar-kebab\"/>\n                            <span className=\"navbar-toggler-bar navbar-kebab\"/>\n                        </button>\n                        <Collapse navbar isOpen={this.state.collapseOpen}>\n                            <Nav className=\"ml-auto\" navbar>\n                                <InputGroup className=\"search-bar\">\n                                    <Button\n                                        color=\"link\"\n                                        data-target=\"#searchModal\"\n                                        data-toggle=\"modal\"\n                                        id=\"search-button\"\n                                        onClick={this.toggleModalSearch}\n                                    >\n                                        <i className=\"tim-icons icon-zoom-split\"/>\n                                        <span className=\"d-lg-none d-md-block\">Search</span>\n                                    </Button>\n                                </InputGroup>\n                                <UncontrolledDropdown nav>\n                                    <DropdownToggle\n                                        caret\n                                        color=\"default\"\n                                        data-toggle=\"dropdown\"\n                                        nav\n                                    >\n                                        <div className=\"notification d-none d-lg-block d-xl-block\"/>\n                                        <i className=\"tim-icons icon-sound-wave\"/>\n                                        <p className=\"d-lg-none\">Notifications</p>\n                                    </DropdownToggle>\n                                    <DropdownMenu className=\"dropdown-navbar\" right tag=\"ul\">\n                                        <NavLink tag=\"li\">\n                                            <DropdownItem className=\"nav-item\">\n                                                Mike John responded to your email\n                                            </DropdownItem>\n                                        </NavLink>\n                                        <NavLink tag=\"li\">\n                                            <DropdownItem className=\"nav-item\">\n                                                You have 5 more tasks\n                                            </DropdownItem>\n                                        </NavLink>\n                                        <NavLink tag=\"li\">\n                                            <DropdownItem className=\"nav-item\">\n                                                Your friend Michael is in town\n                                            </DropdownItem>\n                                        </NavLink>\n                                        <NavLink tag=\"li\">\n                                            <DropdownItem className=\"nav-item\">\n                                                Another notification\n                                            </DropdownItem>\n                                        </NavLink>\n                                        <NavLink tag=\"li\">\n                                            <DropdownItem className=\"nav-item\">\n                                                Another one\n                                            </DropdownItem>\n                                        </NavLink>\n                                    </DropdownMenu>\n                                </UncontrolledDropdown>\n                                <UncontrolledDropdown nav>\n                                    <DropdownToggle\n                                        caret\n                                        color=\"default\"\n                                        data-toggle=\"dropdown\"\n                                        nav\n                                        onClick={e => e.preventDefault()}\n                                    >\n                                        <div className=\"photo\">\n                                            <img alt=\"...\" src={require(\"assets/img/anime3.png\")}/>\n                                        </div>\n                                        <b className=\"caret d-none d-lg-block d-xl-block\"/>\n                                        <p className=\"d-lg-none\">Log out</p>\n                                    </DropdownToggle>\n                                    <DropdownMenu className=\"dropdown-navbar\" right tag=\"ul\">\n                                        <NavLink tag=\"li\">\n                                            <DropdownItem className=\"nav-item\">Profile</DropdownItem>\n                                        </NavLink>\n                                        <NavLink tag=\"li\">\n                                            <DropdownItem className=\"nav-item\">Settings</DropdownItem>\n                                        </NavLink>\n                                        <DropdownItem divider tag=\"li\"/>\n                                        <NavLink tag=\"li\">\n                                            <DropdownItem className=\"nav-item\">Log out</DropdownItem>\n                                        </NavLink>\n                                    </DropdownMenu>\n                                </UncontrolledDropdown>\n                                <li className=\"separator d-lg-none\"/>\n                            </Nav>\n                        </Collapse>\n                    </Container>\n                </Navbar>\n\n                <Modal\n                    modalClassName=\"modal-search\"\n                    isOpen={this.state.modalSearch}\n                    toggle={this.toggleModalSearch}\n\n                >\n                    <div className=\"modal-header\">\n                        <Input id=\"inlineFormInputGroup\" placeholder=\"SEARCH\" type=\"text\" onChange={this.toggleSearch}/>\n                        <button\n                            aria-label=\"Close\"\n                            className=\"close\"\n                            data-dismiss=\"modal\"\n                            type=\"button\"\n                            onClick={this.toggleModalSearch}\n                        >\n                            <i className=\"tim-icons icon-simple-remove\"/>\n                        </button>\n                    </div>\n                    {this.state.search_list.length > 0 &&\n                    <UncontrolledDropdown>\n                        <DropdownToggle\n                            color=\"default\"\n                            data-toggle=\"dropdown\"\n                            nav>\n                            {this.state.search_list.map((city, index) => {\n                                const city_id = `${city.cityLatitude},${city.cityLongitude}`;\n                                return (\n                                    <>\n                                        <NavLink tag=\"li\">\n                                            <DropdownItem\n                                                id={city_id} className=\"nav-item\"\n                                                onClick={this.getCity}>{city.cityName}</DropdownItem>\n                                        </NavLink>\n                                        <DropdownItem divider tag=\"li\"/>\n                                    </>\n                                )\n                            })}\n\n                        </DropdownToggle>\n\n                    </UncontrolledDropdown>\n                    }\n                    < /Modal>\n                    </>\n\n                    );\n                    }\n                    }\n\n                    export default AdminNavbar;\n"]},"metadata":{},"sourceType":"module"}