{"ast":null,"code":"import _regeneratorRuntime from \"/home/noone/Desktop/TQS/Projeto1/black-dashboard-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/noone/Desktop/TQS/Projeto1/black-dashboard-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/home/noone/Desktop/TQS/Projeto1/black-dashboard-react/src/views/AirQualiy.js\";\nimport React from \"react\"; // nodejs library that concatenates classes\n\nimport classNames from \"classnames\"; // react plugin used to create charts\n\nimport { Line, Bar } from \"react-chartjs-2\"; // reactstrap components\n\nimport { Button, Card, CardBody, Row, Col, CardText, CardFooter, Modal, Input } from \"reactstrap\"; // core components\n\nimport { chartExample1, chartExample2, chartExample3, chartExample4 } from \"variables/charts.js\";\nimport axios from 'axios';\nconst REST_HOST = process.env.REACT_APP_REST_HOST;\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    var _this;\n\n    super(props);\n    _this = this;\n\n    this.setBgChartData = name => {\n      this.setState({\n        bigChartData: name\n      });\n    };\n\n    this.parsePollutants = pollutants => {\n      let non_null_pollutants = [];\n      Object.keys(pollutants).map(key => {\n        const pollutant = pollutants[key];\n        if (pollutant !== null) non_null_pollutants.push(pollutant);\n      });\n      return non_null_pollutants;\n    };\n\n    this.parseDate = dateStr => {\n      return new Date(dateStr).toLocaleString('pt-PT', {\n        'hour12': false\n      });\n    };\n\n    this.get_air_quality_data = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var city_data, latitude, longitude, href, _yield$axios$get, data, current_air_condition, pollutants, date, weatherData;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            city_data = JSON.parse(localStorage.getItem('city_data'));\n            _context.next = 3;\n            return _this.setState({\n              city_data: city_data\n            });\n\n          case 3:\n            latitude = _this.state.city_data.cityLatitude;\n            longitude = _this.state.city_data.cityLongitude;\n            href = \"\".concat(REST_HOST, \"/air/lat=\").concat(latitude, \"&long=\").concat(longitude);\n            _context.next = 8;\n            return axios.get(href);\n\n          case 8:\n            _yield$axios$get = _context.sent;\n            data = _yield$axios$get.data;\n            current_air_condition = data.current_conditions;\n            pollutants = _this.parsePollutants(current_air_condition.pollutants);\n            date = _this.parseDate(current_air_condition.date);\n            console.log(date);\n            weatherData = {\n              category: current_air_condition.category,\n              color: current_air_condition.color,\n              pollutants: pollutants,\n              date: date,\n              air_score: current_air_condition.air_score,\n              health_recommendations: current_air_condition.health_recommendations.active\n            };\n            _context.next = 17;\n            return _this.setState({\n              weatherData: weatherData\n            });\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    this.pollutantInfo = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n        var pollutantData, i, pollutant;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _this.toggleModal();\n\n              pollutantData = {\n                display_name: e.target.innerText,\n                full_name: \"\",\n                concentration_value: 0,\n                concentration_units: 0,\n                color: '',\n                source: '',\n                effects: ''\n              };\n\n              for (i = 0; i < _this.state.weatherData.pollutants.length; i++) {\n                pollutant = _this.state.weatherData.pollutants[i];\n\n                if (pollutantData.display_name === pollutant.display_name) {\n                  pollutantData.full_name = pollutant.full_name;\n                  pollutantData.concentration_value = pollutant.concentration.value;\n                  pollutantData.concentration_units = pollutant.concentration.units;\n                  pollutantData.color = pollutant.aqi_information.baqi.color;\n                  pollutantData.source = pollutant.sources_and_effects.sources;\n                  pollutantData.effects = pollutant.sources_and_effects.effects;\n                }\n              }\n\n              _context2.next = 5;\n              return _this.setState({\n                pollutantData: pollutantData\n              });\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    this.toggleModal = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    let date_now = new Date();\n    this.state = {\n      bigChartData: \"data1\",\n      modal: false,\n      city_data: {\n        cityName: '',\n        cityId: '',\n        cityLatitude: '',\n        cityLongitude: ''\n      },\n      weatherData: {\n        category: '',\n        color: '',\n        pollutants: [],\n        date: date_now.toDateString(),\n        air_score: 0,\n        health_recommendations: ''\n      },\n      pollutantData: {\n        display_name: \"\",\n        full_name: \"\",\n        concentration_value: 0,\n        concentration_units: 0,\n        color: '',\n        source: '',\n        effects: ''\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.get_air_quality_data().then(r => {});\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"card-user\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(CardText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"author\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"block block-one\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"block block-two\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"block block-three\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"block block-four\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"a\", {\n      onClick: e => e.preventDefault(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"...\",\n      className: \"avatar\",\n      src: require(\"assets/img/qualidade-do-ar.png\"),\n      style: {\n        border: \"none\",\n        \"border-radius\": \"0\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 45\n      }\n    }, this.state.city_data.cityName)), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"description\",\n      style: {\n        color: this.state.weatherData.color\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 45\n      }\n    }, this.state.weatherData.category, \" : \", this.state.weatherData.air_score)), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 45\n      }\n    }, \"Last update :\"), \" \\xA0\", /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 72\n      }\n    }, this.state.weatherData.date))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"author\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 45\n      }\n    }, \"Pollutants\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 37\n      }\n    }, this.state.weatherData.pollutants.map(pollutant => {\n      return /*#__PURE__*/React.createElement(Button, {\n        className: \"btn-icon btn-round\",\n        color: \"facebook\",\n        id: pollutant.display_name,\n        onClick: this.pollutantInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          \"font-size\": \"10px\",\n          color: pollutant.aqi_information.baqi.color\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 57\n        }\n      }, \" \", pollutant.display_name));\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"author\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 45\n      }\n    }, \"Health Recommendations\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-description\",\n      style: {\n        \"text-align\": \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 37\n      }\n    }, this.state.weatherData.health_recommendations)))))), /*#__PURE__*/React.createElement(Modal, {\n      modalClassName: \"modal-search\",\n      isOpen: this.state.modal,\n      toggle: this.toggleModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"card-user\",\n      style: {\n        \"margin-bottom\": \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"author\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"block block-one\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"block block-two\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"block block-three\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"block block-four\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-icon btn-round\",\n      color: \"facebook\",\n      id: this.state.pollutantData.display_name,\n      onClick: this.pollutantInfo,\n      style: {\n        width: \"100px\",\n        height: \"100px\",\n        \"border-radius\": \"50%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        \"font-size\": \"20px\",\n        color: this.state.pollutantData.color\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 57\n      }\n    }, \" \", this.state.pollutantData.display_name)), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 33\n      }\n    }, this.state.pollutantData.full_name), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"description\",\n      style: {\n        color: this.state.pollutantData.color\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 37\n      }\n    }, this.state.pollutantData.concentration_value, \" \", this.state.pollutantData.concentration_units))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"author\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 33\n      }\n    }, \"Source\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-description\",\n      style: {\n        \"text-align\": \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 29\n      }\n    }, this.state.pollutantData.source), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"author\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 33\n      }\n    }, \"Effects\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-description\",\n      style: {\n        \"text-align\": \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 29\n      }\n    }, this.state.pollutantData.effects), /*#__PURE__*/React.createElement(\"button\", {\n      \"aria-label\": \"Close\",\n      className: \"close\",\n      \"data-dismiss\": \"modal\",\n      type: \"button\",\n      onClick: this.toggleModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"tim-icons icon-simple-remove\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 33\n      }\n    }))))));\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/noone/Desktop/TQS/Projeto1/black-dashboard-react/src/views/AirQualiy.js"],"names":["React","classNames","Line","Bar","Button","Card","CardBody","Row","Col","CardText","CardFooter","Modal","Input","chartExample1","chartExample2","chartExample3","chartExample4","axios","REST_HOST","process","env","REACT_APP_REST_HOST","Dashboard","Component","constructor","props","setBgChartData","name","setState","bigChartData","parsePollutants","pollutants","non_null_pollutants","Object","keys","map","key","pollutant","push","parseDate","dateStr","Date","toLocaleString","get_air_quality_data","city_data","JSON","parse","localStorage","getItem","latitude","state","cityLatitude","longitude","cityLongitude","href","get","data","current_air_condition","current_conditions","date","console","log","weatherData","category","color","air_score","health_recommendations","active","pollutantInfo","e","toggleModal","pollutantData","display_name","target","innerText","full_name","concentration_value","concentration_units","source","effects","i","length","concentration","value","units","aqi_information","baqi","sources_and_effects","sources","modal","date_now","cityName","cityId","toDateString","componentDidMount","then","r","render","preventDefault","require","border","width","height"],"mappings":"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","sourcesContent":["import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// react plugin used to create charts\nimport {Line, Bar} from \"react-chartjs-2\";\n\n// reactstrap components\nimport {\n    Button,\n    Card,\n    CardBody,\n    Row,\n    Col,\n    CardText, CardFooter,\n    Modal,\n    Input\n} from \"reactstrap\";\n\n// core components\nimport {\n    chartExample1,\n    chartExample2,\n    chartExample3,\n    chartExample4\n} from \"variables/charts.js\";\nimport axios from 'axios';\n\nconst REST_HOST = process.env.REACT_APP_REST_HOST\n\nclass Dashboard extends React.Component {\n    constructor(props) {\n        super(props);\n        let date_now = new Date();\n        this.state = {\n            bigChartData: \"data1\",\n            modal: false,\n            city_data: {\n                cityName: '',\n                cityId: '',\n                cityLatitude: '',\n                cityLongitude: '',\n            },\n            weatherData: {\n                category: '',\n                color: '',\n                pollutants: [],\n                date: date_now.toDateString(),\n                air_score: 0,\n                health_recommendations: ''\n\n            },\n            pollutantData: {\n                display_name: \"\",\n                full_name: \"\",\n                concentration_value: 0,\n                concentration_units: 0,\n                color: '',\n                source: '',\n                effects: ''\n            }\n        };\n    }\n\n    setBgChartData = name => {\n        this.setState({\n            bigChartData: name\n        });\n    };\n\n    parsePollutants = (pollutants) => {\n        let non_null_pollutants = [];\n\n        Object.keys(pollutants).map((key) => {\n            const pollutant = pollutants[key];\n            if (pollutant !== null)\n                non_null_pollutants.push(pollutant);\n        });\n\n        return non_null_pollutants;\n    };\n\n    parseDate = (dateStr) => {\n        return new Date(dateStr).toLocaleString('pt-PT', {\n            'hour12': false,\n        })\n    };\n\n\n    get_air_quality_data = async () => {\n        const city_data = JSON.parse(localStorage.getItem('city_data'));\n        await this.setState({\n            city_data: city_data\n        });\n\n        const latitude = this.state.city_data.cityLatitude;\n        const longitude = this.state.city_data.cityLongitude;\n\n        const href = `${REST_HOST}/air/lat=${latitude}&long=${longitude}`;\n\n        const {data} = await axios.get(href);\n\n\n        const current_air_condition = data.current_conditions;\n        const pollutants = this.parsePollutants(current_air_condition.pollutants);\n        const date = this.parseDate(current_air_condition.date);\n\n        console.log(date)\n        const weatherData = {\n            category: current_air_condition.category,\n            color: current_air_condition.color,\n            pollutants: pollutants,\n            date: date,\n            air_score: current_air_condition.air_score,\n            health_recommendations: current_air_condition.health_recommendations.active\n        };\n\n        await this.setState({weatherData: weatherData});\n\n        //console.log(this.state);\n    };\n\n\n    componentDidMount() {\n        this.get_air_quality_data().then(r => {\n        });\n    }\n\n    pollutantInfo = async (e) => {\n        this.toggleModal();\n        let pollutantData = {\n            display_name: e.target.innerText,\n            full_name: \"\",\n            concentration_value: 0,\n            concentration_units: 0,\n            color: '',\n            source: '',\n            effects: ''\n        };\n\n        for (let i = 0; i < this.state.weatherData.pollutants.length; i++) {\n            const pollutant = this.state.weatherData.pollutants[i];\n            if (pollutantData.display_name === pollutant.display_name) {\n                pollutantData.full_name = pollutant.full_name;\n                pollutantData.concentration_value = pollutant.concentration.value;\n                pollutantData.concentration_units = pollutant.concentration.units;\n                pollutantData.color = pollutant.aqi_information.baqi.color;\n                pollutantData.source = pollutant.sources_and_effects.sources;\n                pollutantData.effects = pollutant.sources_and_effects.effects\n            }\n        }\n\n        await this.setState({pollutantData: pollutantData});\n\n    };\n\n    toggleModal = () => {\n        this.setState({\n            modal: !this.state.modal\n        });\n    };\n\n\n    render() {\n        return (\n            <>\n                <div className=\"content\">\n                    <Row>\n                        <Col md=\"12\">\n                            <Card className=\"card-user\">\n                                <CardBody>\n                                    <CardText/>\n                                    <div className=\"author\">\n                                        <div className=\"block block-one\"/>\n                                        <div className=\"block block-two\"/>\n                                        <div className=\"block block-three\"/>\n                                        <div className=\"block block-four\"/>\n                                        <a onClick={e => e.preventDefault()}>\n                                            <img\n                                                alt=\"...\"\n                                                className=\"avatar\"\n                                                src={require(\"assets/img/qualidade-do-ar.png\")}\n                                                style={{border: \"none\", \"border-radius\": \"0\"}}\n                                            />\n                                            <h5 className=\"title\">{this.state.city_data.cityName}</h5>\n                                        </a>\n                                        <p className=\"description\"\n                                           style={{color: this.state.weatherData.color}}>\n                                            <b>{this.state.weatherData.category} : {this.state.weatherData.air_score}</b>\n                                        </p>\n                                        <p className=\"date\">\n                                            <b>Last update :</b> &nbsp;<h3>{this.state.weatherData.date}</h3></p>\n                                    </div>\n\n\n                                    <div className=\"author\">\n                                        <h1><b>Pollutants</b></h1>\n                                    </div>\n                                    <div className=\"button-container\">\n                                        {\n                                            this.state.weatherData.pollutants.map((pollutant) => {\n                                                return (\n                                                    <Button className=\"btn-icon btn-round\" color=\"facebook\"\n                                                            id={pollutant.display_name} onClick={this.pollutantInfo}>\n                                                        <span\n                                                            style={{\n                                                                \"font-size\": \"10px\",\n                                                                color: pollutant.aqi_information.baqi.color\n                                                            }}> {pollutant.display_name}</span>\n                                                    </Button>\n                                                )\n                                            })\n                                        }\n                                    </div>\n\n                                    <div className=\"author\">\n                                        <h1><b>Health Recommendations</b></h1>\n                                    </div>\n                                    <div className=\"card-description\" style={{\"text-align\": \"center\"}}>\n                                        {this.state.weatherData.health_recommendations}\n                                    </div>\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n                </div>\n                <Modal\n                    modalClassName=\"modal-search\"\n                    isOpen={this.state.modal}\n                    toggle={this.toggleModal}>\n\n                    <Card className=\"card-user\" style={{\"margin-bottom\": \"0px\"}}>\n                        <CardBody>\n\n                            <div className=\"author\">\n                                <div className=\"block block-one\"/>\n                                <div className=\"block block-two\"/>\n                                <div className=\"block block-three\"/>\n                                <div className=\"block block-four\"/>\n                                <Button className=\"btn-icon btn-round\" color=\"facebook\"\n                                        id={this.state.pollutantData.display_name} onClick={this.pollutantInfo}\n                                        style={{width: \"100px\", height: \"100px\", \"border-radius\": \"50%\"}}>\n                                                        <span\n                                                            style={{\n                                                                \"font-size\": \"20px\",\n                                                                color: this.state.pollutantData.color\n                                                            }}> {this.state.pollutantData.display_name}</span>\n                                </Button>\n                                <p className=\"description\">\n                                    {this.state.pollutantData.full_name}</p>\n                                <p className=\"description\"\n                                   style={{color: this.state.pollutantData.color}}>\n                                    <b>{this.state.pollutantData.concentration_value} {this.state.pollutantData.concentration_units}</b>\n                                </p>\n\n                            </div>\n                            <div className=\"author\">\n                                <b>Source</b>\n                            </div>\n                            <div className=\"card-description\" style={{\"text-align\": \"center\"}}>\n                                {this.state.pollutantData.source}\n                            </div>\n                            <div className=\"author\">\n                                <b>Effects</b>\n                            </div>\n                            <div className=\"card-description\" style={{\"text-align\": \"center\"}}>\n                                {this.state.pollutantData.effects}\n                            </div>\n                            <button\n                                aria-label=\"Close\"\n                                className=\"close\"\n                                data-dismiss=\"modal\"\n                                type=\"button\"\n                                onClick={this.toggleModal}\n                            >\n                                <i className=\"tim-icons icon-simple-remove\"/>\n                            </button>\n                        </CardBody>\n                    </Card>\n                </Modal>\n            </>\n        );\n    }\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}