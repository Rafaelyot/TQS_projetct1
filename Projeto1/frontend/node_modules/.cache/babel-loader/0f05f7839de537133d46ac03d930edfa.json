{"ast":null,"code":"import _regeneratorRuntime from \"/home/noone/Desktop/TQS_projetct1/Projeto1/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/noone/Desktop/TQS_projetct1/Projeto1/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/home/noone/Desktop/TQS_projetct1/Projeto1/frontend/src/views/AirQualiy.js\";\nimport React from \"react\"; // nodejs library that concatenates classes\n\nimport classNames from \"classnames\"; // react plugin used to create charts\n\nimport { Line, Bar } from \"react-chartjs-2\"; // reactstrap components\n\nimport { Button, Card, CardBody, Row, Col, CardText, CardFooter, Modal, Input } from \"reactstrap\"; // core components\n\nimport { chartExample1, chartExample2, chartExample3, chartExample4 } from \"variables/charts.js\";\nimport axios from 'axios';\nimport NotificationAlert from \"react-notification-alert\";\nconst REST_HOST = process.env.REACT_APP_REST_HOST;\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    var _this;\n\n    super(props);\n    _this = this;\n\n    this.setBgChartData = name => {\n      this.setState({\n        bigChartData: name\n      });\n    };\n\n    this.parsePollutants = pollutants => {\n      let non_null_pollutants = [];\n      Object.keys(pollutants).map(key => {\n        const pollutant = pollutants[key];\n        if (pollutant !== null) non_null_pollutants.push(pollutant);\n      });\n      return non_null_pollutants;\n    };\n\n    this.parseDate = dateStr => {\n      return new Date(dateStr).toLocaleString('pt-PT', {\n        'hour12': false\n      });\n    };\n\n    this.get_air_quality_data = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var dataD, rdata, data, city_data, latitude, longitude, href, current_air_condition, pollutants, date, weatherData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            dataD = JSON.parse(localStorage.getItem('historical_city_data'));\n            localStorage.setItem('historical_city_data', JSON.stringify(null));\n            rdata = [];\n            data = [];\n\n            if (!(dataD === null)) {\n              _context.next = 21;\n              break;\n            }\n\n            city_data = JSON.parse(localStorage.getItem('city_data'));\n            _context.next = 8;\n            return _this.setState({\n              city_data: city_data\n            });\n\n          case 8:\n            latitude = _this.state.city_data.cityLatitude;\n            longitude = _this.state.city_data.cityLongitude;\n            latitude = 1000000;\n            href = \"\".concat(REST_HOST, \"/air/lat=\").concat(latitude, \"&long=\").concat(longitude);\n            _context.next = 14;\n            return axios.get(href);\n\n          case 14:\n            rdata = _context.sent;\n\n            if (!(rdata.status !== 200)) {\n              _context.next = 18;\n              break;\n            }\n\n            _this.renderErrorNotification([\"Nome da cidade deve conter pelo menos 3 caracteres\"]);\n\n            return _context.abrupt(\"return\");\n\n          case 18:\n            data = rdata.data;\n            _context.next = 22;\n            break;\n\n          case 21:\n            data = dataD;\n\n          case 22:\n            current_air_condition = data.current_conditions;\n            pollutants = _this.parsePollutants(current_air_condition.pollutants);\n            date = _this.parseDate(current_air_condition.date);\n            weatherData = {\n              category: current_air_condition.category,\n              color: current_air_condition.color,\n              pollutants: pollutants,\n              date: date,\n              air_score: current_air_condition.air_score,\n              health_recommendations: current_air_condition.health_recommendations.active\n            };\n            _context.next = 28;\n            return _this.setState({\n              weatherData: weatherData\n            });\n\n          case 28:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    this.pollutantInfo = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n        var pollutantData, i, pollutant;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _this.toggleModal();\n\n              pollutantData = {\n                display_name: e.target.innerText,\n                full_name: \"\",\n                concentration_value: 0,\n                concentration_units: 0,\n                color: '',\n                source: '',\n                effects: ''\n              };\n\n              for (i = 0; i < _this.state.weatherData.pollutants.length; i++) {\n                pollutant = _this.state.weatherData.pollutants[i];\n\n                if (pollutantData.display_name === pollutant.display_name) {\n                  pollutantData.full_name = pollutant.full_name;\n                  pollutantData.concentration_value = pollutant.concentration.value;\n                  pollutantData.concentration_units = pollutant.concentration.units;\n                  pollutantData.color = pollutant.aqi_information.baqi.color;\n                  pollutantData.source = pollutant.sources_and_effects.sources;\n                  pollutantData.effects = pollutant.sources_and_effects.effects;\n                }\n              }\n\n              _context2.next = 5;\n              return _this.setState({\n                pollutantData: pollutantData\n              });\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    this.toggleModal = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    let date_now = new Date();\n    this.state = {\n      bigChartData: \"data1\",\n      modal: false,\n      city_data: {\n        cityName: '',\n        cityId: '',\n        cityLatitude: '39.91177',\n        cityLongitude: '-8.43562'\n      },\n      weatherData: {\n        category: '',\n        color: '',\n        pollutants: [],\n        date: date_now.toDateString(),\n        air_score: 0,\n        health_recommendations: ''\n      },\n      pollutantData: {\n        display_name: \"\",\n        full_name: \"\",\n        concentration_value: 0,\n        concentration_units: 0,\n        color: '',\n        source: '',\n        effects: ''\n      }\n    };\n  }\n\n  renderErrorNotification(errors, time) {\n    if (time === undefined) time = 5;\n    var options = {};\n    options = {\n      place: \"br\",\n      message: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }\n      }, errors.map(value => {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 29\n          }\n        }, value);\n      })),\n      icon: \"tim-icons icon-alert-circle-exc\",\n      type: \"danger\",\n      autoDismiss: time\n    };\n    this.refs.notificationAlert.notificationAlert(options);\n  }\n\n  componentDidMount() {\n    this.get_air_quality_data().then(r => {});\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"react-notification-alert-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NotificationAlert, {\n      ref: \"notificationAlert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"card-user\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(CardText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"author\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"block block-one\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"block block-two\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"block block-three\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"block block-four\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"a\", {\n      onClick: e => e.preventDefault(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"...\",\n      className: \"avatar\",\n      src: require(\"assets/img/qualidade-do-ar.png\"),\n      style: {\n        border: \"none\",\n        \"border-radius\": \"0\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 45\n      }\n    }, this.state.city_data.cityName)), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"description\",\n      style: {\n        color: this.state.weatherData.color\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 45\n      }\n    }, this.state.weatherData.category, \" : \", this.state.weatherData.air_score)), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 45\n      }\n    }, \"Last update :\"), \" \\xA0\", /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 72\n      }\n    }, this.state.weatherData.date))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"author\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 45\n      }\n    }, \"Pollutants\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 37\n      }\n    }, this.state.weatherData.pollutants.map(pollutant => {\n      return /*#__PURE__*/React.createElement(Button, {\n        className: \"btn-icon btn-round\",\n        color: \"facebook\",\n        id: pollutant.display_name,\n        onClick: this.pollutantInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          \"font-size\": \"10px\",\n          color: pollutant.aqi_information.baqi.color\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 57\n        }\n      }, \" \", pollutant.display_name));\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"author\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 45\n      }\n    }, \"Health Recommendations\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-description\",\n      style: {\n        \"text-align\": \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 37\n      }\n    }, this.state.weatherData.health_recommendations)))))), /*#__PURE__*/React.createElement(Modal, {\n      modalClassName: \"modal-search\",\n      isOpen: this.state.modal,\n      toggle: this.toggleModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"card-user\",\n      style: {\n        \"margin-bottom\": \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"author\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"block block-one\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"block block-two\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"block block-three\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"block block-four\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-icon btn-round\",\n      color: \"facebook\",\n      id: this.state.pollutantData.display_name,\n      onClick: this.pollutantInfo,\n      style: {\n        width: \"100px\",\n        height: \"100px\",\n        \"border-radius\": \"50%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        \"font-size\": \"20px\",\n        color: this.state.pollutantData.color\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 57\n      }\n    }, \" \", this.state.pollutantData.display_name)), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 33\n      }\n    }, this.state.pollutantData.full_name), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"description\",\n      style: {\n        color: this.state.pollutantData.color\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 37\n      }\n    }, this.state.pollutantData.concentration_value, \" \", this.state.pollutantData.concentration_units))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"author\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 33\n      }\n    }, \"Source\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-description\",\n      style: {\n        \"text-align\": \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 29\n      }\n    }, this.state.pollutantData.source), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"author\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 33\n      }\n    }, \"Effects\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-description\",\n      style: {\n        \"text-align\": \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 29\n      }\n    }, this.state.pollutantData.effects), /*#__PURE__*/React.createElement(\"button\", {\n      \"aria-label\": \"Close\",\n      className: \"close\",\n      \"data-dismiss\": \"modal\",\n      type: \"button\",\n      onClick: this.toggleModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"tim-icons icon-simple-remove\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 33\n      }\n    }))))));\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/noone/Desktop/TQS_projetct1/Projeto1/frontend/src/views/AirQualiy.js"],"names":["React","classNames","Line","Bar","Button","Card","CardBody","Row","Col","CardText","CardFooter","Modal","Input","chartExample1","chartExample2","chartExample3","chartExample4","axios","NotificationAlert","REST_HOST","process","env","REACT_APP_REST_HOST","Dashboard","Component","constructor","props","setBgChartData","name","setState","bigChartData","parsePollutants","pollutants","non_null_pollutants","Object","keys","map","key","pollutant","push","parseDate","dateStr","Date","toLocaleString","get_air_quality_data","dataD","JSON","parse","localStorage","getItem","setItem","stringify","rdata","data","city_data","latitude","state","cityLatitude","longitude","cityLongitude","href","get","status","renderErrorNotification","current_air_condition","current_conditions","date","weatherData","category","color","air_score","health_recommendations","active","pollutantInfo","e","toggleModal","pollutantData","display_name","target","innerText","full_name","concentration_value","concentration_units","source","effects","i","length","concentration","value","units","aqi_information","baqi","sources_and_effects","sources","modal","date_now","cityName","cityId","toDateString","errors","time","undefined","options","place","message","icon","type","autoDismiss","refs","notificationAlert","componentDidMount","then","r","render","preventDefault","require","border","width","height"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CACA;;AACA,SAAQC,IAAR,EAAcC,GAAd,QAAwB,iBAAxB,C,CAEA;;AACA,SACIC,MADJ,EAEIC,IAFJ,EAGIC,QAHJ,EAIIC,GAJJ,EAKIC,GALJ,EAMIC,QANJ,EAMcC,UANd,EAOIC,KAPJ,EAQIC,KARJ,QASO,YATP,C,CAUA;;AACA,SACIC,aADJ,EAEIC,aAFJ,EAGIC,aAHJ,EAIIC,aAJJ,QAKO,qBALP;AAMA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,iBAAP,MAA8B,0BAA9B;AAEA,MAAMC,SAAS,GAAGC,OAAO,CAACC,GAAR,CAAYC,mBAA9B;;AAEA,MAAMC,SAAN,SAAwBvB,KAAK,CAACwB,SAA9B,CAAwC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAAA;;AACf,UAAMA,KAAN,CADe;AAAA;;AAAA,SAiCnBC,cAjCmB,GAiCFC,IAAI,IAAI;AACrB,WAAKC,QAAL,CAAc;AACVC,QAAAA,YAAY,EAAEF;AADJ,OAAd;AAGH,KArCkB;;AAAA,SAuCnBG,eAvCmB,GAuCAC,UAAD,IAAgB;AAC9B,UAAIC,mBAAmB,GAAG,EAA1B;AAEAC,MAAAA,MAAM,CAACC,IAAP,CAAYH,UAAZ,EAAwBI,GAAxB,CAA6BC,GAAD,IAAS;AACjC,cAAMC,SAAS,GAAGN,UAAU,CAACK,GAAD,CAA5B;AACA,YAAIC,SAAS,KAAK,IAAlB,EACIL,mBAAmB,CAACM,IAApB,CAAyBD,SAAzB;AACP,OAJD;AAMA,aAAOL,mBAAP;AACH,KAjDkB;;AAAA,SAmDnBO,SAnDmB,GAmDNC,OAAD,IAAa;AACrB,aAAO,IAAIC,IAAJ,CAASD,OAAT,EAAkBE,cAAlB,CAAiC,OAAjC,EAA0C;AAC7C,kBAAU;AADmC,OAA1C,CAAP;AAGH,KAvDkB;;AAAA,SAmFnBC,oBAnFmB,yEAmFI;AAAA;AAAA;AAAA;AAAA;AAEbC,YAAAA,KAFa,GAELC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,sBAArB,CAAX,CAFK;AAGnBD,YAAAA,YAAY,CAACE,OAAb,CAAqB,sBAArB,EAA4CJ,IAAI,CAACK,SAAL,CAAe,IAAf,CAA5C;AACIC,YAAAA,KAJe,GAIP,EAJO;AAKfC,YAAAA,IALe,GAKR,EALQ;;AAAA,kBAMfR,KAAK,KAAK,IANK;AAAA;AAAA;AAAA;;AAOTS,YAAAA,SAPS,GAOGR,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAPH;AAAA;AAAA,mBAQT,KAAI,CAACpB,QAAL,CAAc;AAChByB,cAAAA,SAAS,EAAEA;AADK,aAAd,CARS;;AAAA;AAYTC,YAAAA,QAZS,GAYE,KAAI,CAACC,KAAL,CAAWF,SAAX,CAAqBG,YAZvB;AAaTC,YAAAA,SAbS,GAaG,KAAI,CAACF,KAAL,CAAWF,SAAX,CAAqBK,aAbxB;AAefJ,YAAAA,QAAQ,GAAG,OAAX;AACMK,YAAAA,IAhBS,aAgBCzC,SAhBD,sBAgBsBoC,QAhBtB,mBAgBuCG,SAhBvC;AAAA;AAAA,mBAkBDzC,KAAK,CAAC4C,GAAN,CAAUD,IAAV,CAlBC;;AAAA;AAkBfR,YAAAA,KAlBe;;AAAA,kBAoBZA,KAAK,CAACU,MAAN,KAAiB,GApBL;AAAA;AAAA;AAAA;;AAqBX,YAAA,KAAI,CAACC,uBAAL,CAA6B,CAAC,oDAAD,CAA7B;;AArBW;;AAAA;AAwBfV,YAAAA,IAAI,GAAGD,KAAK,CAACC,IAAb;AAxBe;AAAA;;AAAA;AA4BfA,YAAAA,IAAI,GAAGR,KAAP;;AA5Be;AAiCbmB,YAAAA,qBAjCa,GAiCWX,IAAI,CAACY,kBAjChB;AAkCbjC,YAAAA,UAlCa,GAkCA,KAAI,CAACD,eAAL,CAAqBiC,qBAAqB,CAAChC,UAA3C,CAlCA;AAmCbkC,YAAAA,IAnCa,GAmCN,KAAI,CAAC1B,SAAL,CAAewB,qBAAqB,CAACE,IAArC,CAnCM;AAsCbC,YAAAA,WAtCa,GAsCC;AAChBC,cAAAA,QAAQ,EAAEJ,qBAAqB,CAACI,QADhB;AAEhBC,cAAAA,KAAK,EAAEL,qBAAqB,CAACK,KAFb;AAGhBrC,cAAAA,UAAU,EAAEA,UAHI;AAIhBkC,cAAAA,IAAI,EAAEA,IAJU;AAKhBI,cAAAA,SAAS,EAAEN,qBAAqB,CAACM,SALjB;AAMhBC,cAAAA,sBAAsB,EAAEP,qBAAqB,CAACO,sBAAtB,CAA6CC;AANrD,aAtCD;AAAA;AAAA,mBA+Cb,KAAI,CAAC3C,QAAL,CAAc;AAACsC,cAAAA,WAAW,EAAEA;AAAd,aAAd,CA/Ca;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAnFJ;;AAAA,SA4InBM,aA5ImB;AAAA,2EA4IH,kBAAOC,CAAP;AAAA;AAAA;AAAA;AAAA;AACZ,cAAA,KAAI,CAACC,WAAL;;AACIC,cAAAA,aAFQ,GAEQ;AAChBC,gBAAAA,YAAY,EAAEH,CAAC,CAACI,MAAF,CAASC,SADP;AAEhBC,gBAAAA,SAAS,EAAE,EAFK;AAGhBC,gBAAAA,mBAAmB,EAAE,CAHL;AAIhBC,gBAAAA,mBAAmB,EAAE,CAJL;AAKhBb,gBAAAA,KAAK,EAAE,EALS;AAMhBc,gBAAAA,MAAM,EAAE,EANQ;AAOhBC,gBAAAA,OAAO,EAAE;AAPO,eAFR;;AAYZ,mBAASC,CAAT,GAAa,CAAb,EAAgBA,CAAC,GAAG,KAAI,CAAC7B,KAAL,CAAWW,WAAX,CAAuBnC,UAAvB,CAAkCsD,MAAtD,EAA8DD,CAAC,EAA/D,EAAmE;AACzD/C,gBAAAA,SADyD,GAC7C,KAAI,CAACkB,KAAL,CAAWW,WAAX,CAAuBnC,UAAvB,CAAkCqD,CAAlC,CAD6C;;AAE/D,oBAAIT,aAAa,CAACC,YAAd,KAA+BvC,SAAS,CAACuC,YAA7C,EAA2D;AACvDD,kBAAAA,aAAa,CAACI,SAAd,GAA0B1C,SAAS,CAAC0C,SAApC;AACAJ,kBAAAA,aAAa,CAACK,mBAAd,GAAoC3C,SAAS,CAACiD,aAAV,CAAwBC,KAA5D;AACAZ,kBAAAA,aAAa,CAACM,mBAAd,GAAoC5C,SAAS,CAACiD,aAAV,CAAwBE,KAA5D;AACAb,kBAAAA,aAAa,CAACP,KAAd,GAAsB/B,SAAS,CAACoD,eAAV,CAA0BC,IAA1B,CAA+BtB,KAArD;AACAO,kBAAAA,aAAa,CAACO,MAAd,GAAuB7C,SAAS,CAACsD,mBAAV,CAA8BC,OAArD;AACAjB,kBAAAA,aAAa,CAACQ,OAAd,GAAwB9C,SAAS,CAACsD,mBAAV,CAA8BR,OAAtD;AACH;AACJ;;AAtBW;AAAA,qBAwBN,KAAI,CAACvD,QAAL,CAAc;AAAC+C,gBAAAA,aAAa,EAAEA;AAAhB,eAAd,CAxBM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OA5IG;;AAAA;AAAA;AAAA;AAAA;;AAAA,SAwKnBD,WAxKmB,GAwKL,MAAM;AAChB,WAAK9C,QAAL,CAAc;AACViE,QAAAA,KAAK,EAAE,CAAC,KAAKtC,KAAL,CAAWsC;AADT,OAAd;AAGH,KA5KkB;;AAEf,QAAIC,QAAQ,GAAG,IAAIrD,IAAJ,EAAf;AACA,SAAKc,KAAL,GAAa;AACT1B,MAAAA,YAAY,EAAE,OADL;AAETgE,MAAAA,KAAK,EAAE,KAFE;AAGTxC,MAAAA,SAAS,EAAE;AACP0C,QAAAA,QAAQ,EAAE,EADH;AAEPC,QAAAA,MAAM,EAAE,EAFD;AAGPxC,QAAAA,YAAY,EAAE,UAHP;AAIPE,QAAAA,aAAa,EAAE;AAJR,OAHF;AASTQ,MAAAA,WAAW,EAAE;AACTC,QAAAA,QAAQ,EAAE,EADD;AAETC,QAAAA,KAAK,EAAE,EAFE;AAGTrC,QAAAA,UAAU,EAAE,EAHH;AAITkC,QAAAA,IAAI,EAAE6B,QAAQ,CAACG,YAAT,EAJG;AAKT5B,QAAAA,SAAS,EAAE,CALF;AAMTC,QAAAA,sBAAsB,EAAE;AANf,OATJ;AAkBTK,MAAAA,aAAa,EAAE;AACXC,QAAAA,YAAY,EAAE,EADH;AAEXG,QAAAA,SAAS,EAAE,EAFA;AAGXC,QAAAA,mBAAmB,EAAE,CAHV;AAIXC,QAAAA,mBAAmB,EAAE,CAJV;AAKXb,QAAAA,KAAK,EAAE,EALI;AAMXc,QAAAA,MAAM,EAAE,EANG;AAOXC,QAAAA,OAAO,EAAE;AAPE;AAlBN,KAAb;AA4BH;;AA0BDrB,EAAAA,uBAAuB,CAACoC,MAAD,EAASC,IAAT,EAAe;AAClC,QAAIA,IAAI,KAAKC,SAAb,EACID,IAAI,GAAG,CAAP;AACJ,QAAIE,OAAO,GAAG,EAAd;AAEAA,IAAAA,OAAO,GAAG;AACNC,MAAAA,KAAK,EAAE,IADD;AAENC,MAAAA,OAAO,eACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKL,MAAM,CAAC/D,GAAP,CAAYoD,KAAD,IAAW;AACnB,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKA,KAAL,CADJ;AAGH,OAJA,CADL,CAHE;AAWNiB,MAAAA,IAAI,EAAE,iCAXA;AAYNC,MAAAA,IAAI,EAAE,QAZA;AAaNC,MAAAA,WAAW,EAAEP;AAbP,KAAV;AAiBA,SAAKQ,IAAL,CAAUC,iBAAV,CAA4BA,iBAA5B,CAA8CP,OAA9C;AAEH;;AAsDDQ,EAAAA,iBAAiB,GAAG;AAChB,SAAKlE,oBAAL,GAA4BmE,IAA5B,CAAiCC,CAAC,IAAI,CACrC,CADD;AAEH;;AAqCDC,EAAAA,MAAM,GAAG;AACL,wBACI,uDACI;AAAK,MAAA,SAAS,EAAC,oCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,iBAAD;AAAmB,MAAA,GAAG,EAAC,mBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,eAII;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,eAII;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,eAKI;AAAG,MAAA,OAAO,EAAEvC,CAAC,IAAIA,CAAC,CAACwC,cAAF,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,GAAG,EAAC,KADR;AAEI,MAAA,SAAS,EAAC,QAFd;AAGI,MAAA,GAAG,EAAEC,OAAO,CAAC,gCAAD,CAHhB;AAII,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAE,MAAT;AAAiB,yBAAiB;AAAlC,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAOI;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuB,KAAK5D,KAAL,CAAWF,SAAX,CAAqB0C,QAA5C,CAPJ,CALJ,eAcI;AAAG,MAAA,SAAS,EAAC,aAAb;AACG,MAAA,KAAK,EAAE;AAAC3B,QAAAA,KAAK,EAAE,KAAKb,KAAL,CAAWW,WAAX,CAAuBE;AAA/B,OADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKb,KAAL,CAAWW,WAAX,CAAuBC,QAA3B,SAAwC,KAAKZ,KAAL,CAAWW,WAAX,CAAuBG,SAA/D,CAFJ,CAdJ,eAkBI;AAAG,MAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,wBAC+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKd,KAAL,CAAWW,WAAX,CAAuBD,IAA5B,CAD/B,CAlBJ,CAFJ,eAyBI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAJ,CADJ,CAzBJ,eA4BI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,KAAKV,KAAL,CAAWW,WAAX,CAAuBnC,UAAvB,CAAkCI,GAAlC,CAAuCE,SAAD,IAAe;AACjD,0BACI,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,oBAAlB;AAAuC,QAAA,KAAK,EAAC,UAA7C;AACQ,QAAA,EAAE,EAAEA,SAAS,CAACuC,YADtB;AACoC,QAAA,OAAO,EAAE,KAAKJ,aADlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEI;AACI,QAAA,KAAK,EAAE;AACH,uBAAa,MADV;AAEHJ,UAAAA,KAAK,EAAE/B,SAAS,CAACoD,eAAV,CAA0BC,IAA1B,CAA+BtB;AAFnC,SADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAIS/B,SAAS,CAACuC,YAJnB,CAFJ,CADJ;AAUH,KAXD,CAFR,CA5BJ,eA6CI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAJ,CADJ,CA7CJ,eAgDI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAkC,MAAA,KAAK,EAAE;AAAC,sBAAc;AAAf,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKrB,KAAL,CAAWW,WAAX,CAAuBI,sBAD5B,CAhDJ,CADJ,CADJ,CADJ,CADJ,CAJJ,eAgEI,oBAAC,KAAD;AACI,MAAA,cAAc,EAAC,cADnB;AAEI,MAAA,MAAM,EAAE,KAAKf,KAAL,CAAWsC,KAFvB;AAGI,MAAA,MAAM,EAAE,KAAKnB,WAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKI,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,WAAhB;AAA4B,MAAA,KAAK,EAAE;AAAC,yBAAiB;AAAlB,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,eAII;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,eAKI,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,oBAAlB;AAAuC,MAAA,KAAK,EAAC,UAA7C;AACQ,MAAA,EAAE,EAAE,KAAKnB,KAAL,CAAWoB,aAAX,CAAyBC,YADrC;AACmD,MAAA,OAAO,EAAE,KAAKJ,aADjE;AAEQ,MAAA,KAAK,EAAE;AAAC4C,QAAAA,KAAK,EAAE,OAAR;AAAiBC,QAAAA,MAAM,EAAE,OAAzB;AAAkC,yBAAiB;AAAnD,OAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGwB;AACI,MAAA,KAAK,EAAE;AACH,qBAAa,MADV;AAEHjD,QAAAA,KAAK,EAAE,KAAKb,KAAL,CAAWoB,aAAX,CAAyBP;AAF7B,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAIS,KAAKb,KAAL,CAAWoB,aAAX,CAAyBC,YAJlC,CAHxB,CALJ,eAcI;AAAG,MAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKrB,KAAL,CAAWoB,aAAX,CAAyBI,SAD9B,CAdJ,eAgBI;AAAG,MAAA,SAAS,EAAC,aAAb;AACG,MAAA,KAAK,EAAE;AAACX,QAAAA,KAAK,EAAE,KAAKb,KAAL,CAAWoB,aAAX,CAAyBP;AAAjC,OADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKb,KAAL,CAAWoB,aAAX,CAAyBK,mBAA7B,OAAmD,KAAKzB,KAAL,CAAWoB,aAAX,CAAyBM,mBAA5E,CAFJ,CAhBJ,CAFJ,eAwBI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CAxBJ,eA2BI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAkC,MAAA,KAAK,EAAE;AAAC,sBAAc;AAAf,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAK1B,KAAL,CAAWoB,aAAX,CAAyBO,MAD9B,CA3BJ,eA8BI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,CA9BJ,eAiCI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAkC,MAAA,KAAK,EAAE;AAAC,sBAAc;AAAf,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAK3B,KAAL,CAAWoB,aAAX,CAAyBQ,OAD9B,CAjCJ,eAoCI;AACI,oBAAW,OADf;AAEI,MAAA,SAAS,EAAC,OAFd;AAGI,sBAAa,OAHjB;AAII,MAAA,IAAI,EAAC,QAJT;AAKI,MAAA,OAAO,EAAE,KAAKT,WALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOI;AAAG,MAAA,SAAS,EAAC,8BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CApCJ,CADJ,CALJ,CAhEJ,CADJ;AAyHH;;AA1SmC;;AA6SxC,eAAepD,SAAf","sourcesContent":["import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// react plugin used to create charts\nimport {Line, Bar} from \"react-chartjs-2\";\n\n// reactstrap components\nimport {\n    Button,\n    Card,\n    CardBody,\n    Row,\n    Col,\n    CardText, CardFooter,\n    Modal,\n    Input\n} from \"reactstrap\";\n// core components\nimport {\n    chartExample1,\n    chartExample2,\n    chartExample3,\n    chartExample4\n} from \"variables/charts.js\";\nimport axios from 'axios';\nimport NotificationAlert from \"react-notification-alert\";\n\nconst REST_HOST = process.env.REACT_APP_REST_HOST\n\nclass Dashboard extends React.Component {\n    constructor(props) {\n        super(props);\n        let date_now = new Date();\n        this.state = {\n            bigChartData: \"data1\",\n            modal: false,\n            city_data: {\n                cityName: '',\n                cityId: '',\n                cityLatitude: '39.91177',\n                cityLongitude: '-8.43562',\n            },\n            weatherData: {\n                category: '',\n                color: '',\n                pollutants: [],\n                date: date_now.toDateString(),\n                air_score: 0,\n                health_recommendations: ''\n\n            },\n            pollutantData: {\n                display_name: \"\",\n                full_name: \"\",\n                concentration_value: 0,\n                concentration_units: 0,\n                color: '',\n                source: '',\n                effects: ''\n            }\n        };\n    }\n\n    setBgChartData = name => {\n        this.setState({\n            bigChartData: name\n        });\n    };\n\n    parsePollutants = (pollutants) => {\n        let non_null_pollutants = [];\n\n        Object.keys(pollutants).map((key) => {\n            const pollutant = pollutants[key];\n            if (pollutant !== null)\n                non_null_pollutants.push(pollutant);\n        });\n\n        return non_null_pollutants;\n    };\n\n    parseDate = (dateStr) => {\n        return new Date(dateStr).toLocaleString('pt-PT', {\n            'hour12': false,\n        })\n    };\n\n    renderErrorNotification(errors, time) {\n        if (time === undefined)\n            time = 5;\n        var options = {};\n\n        options = {\n            place: \"br\",\n            message: (\n                <div>\n                    {errors.map((value) => {\n                        return (\n                            <li>{value}</li>\n                        )\n                    })}\n                </div>\n            ),\n            icon: \"tim-icons icon-alert-circle-exc\",\n            type: \"danger\",\n            autoDismiss: time\n        };\n\n\n        this.refs.notificationAlert.notificationAlert(options);\n\n    }\n\n    get_air_quality_data = async () => {\n\n        const dataD = JSON.parse(localStorage.getItem('historical_city_data'));\n        localStorage.setItem('historical_city_data',JSON.stringify(null));\n        let rdata = [];\n        let data = [];\n        if (dataD === null) {\n            const city_data = JSON.parse(localStorage.getItem('city_data'));\n            await this.setState({\n                city_data: city_data\n            });\n\n            const latitude = this.state.city_data.cityLatitude;\n            const longitude = this.state.city_data.cityLongitude;\n\n            latitude = 1000000;\n            const href = `${REST_HOST}/air/lat=${latitude}&long=${longitude}`;\n\n            rdata = await axios.get(href);\n\n            if(rdata.status !== 200) {\n                this.renderErrorNotification([\"Nome da cidade deve conter pelo menos 3 caracteres\"]);\n                return;\n            }\n            data = rdata.data;\n\n\n        }else {\n            data = dataD;\n\n        }\n\n\n        const current_air_condition = data.current_conditions;\n        const pollutants = this.parsePollutants(current_air_condition.pollutants);\n        const date = this.parseDate(current_air_condition.date);\n\n\n        const weatherData = {\n            category: current_air_condition.category,\n            color: current_air_condition.color,\n            pollutants: pollutants,\n            date: date,\n            air_score: current_air_condition.air_score,\n            health_recommendations: current_air_condition.health_recommendations.active\n        };\n\n        await this.setState({weatherData: weatherData});\n\n    };\n\n\n    componentDidMount() {\n        this.get_air_quality_data().then(r => {\n        });\n    }\n\n    pollutantInfo = async (e) => {\n        this.toggleModal();\n        let pollutantData = {\n            display_name: e.target.innerText,\n            full_name: \"\",\n            concentration_value: 0,\n            concentration_units: 0,\n            color: '',\n            source: '',\n            effects: ''\n        };\n\n        for (let i = 0; i < this.state.weatherData.pollutants.length; i++) {\n            const pollutant = this.state.weatherData.pollutants[i];\n            if (pollutantData.display_name === pollutant.display_name) {\n                pollutantData.full_name = pollutant.full_name;\n                pollutantData.concentration_value = pollutant.concentration.value;\n                pollutantData.concentration_units = pollutant.concentration.units;\n                pollutantData.color = pollutant.aqi_information.baqi.color;\n                pollutantData.source = pollutant.sources_and_effects.sources;\n                pollutantData.effects = pollutant.sources_and_effects.effects\n            }\n        }\n\n        await this.setState({pollutantData: pollutantData});\n\n    };\n\n    toggleModal = () => {\n        this.setState({\n            modal: !this.state.modal\n        });\n    };\n\n\n    render() {\n        return (\n            <>\n                <div className=\"react-notification-alert-container\">\n                    <NotificationAlert ref=\"notificationAlert\" />\n                </div>\n                <div className=\"content\">\n                    <Row>\n                        <Col md=\"12\">\n                            <Card className=\"card-user\">\n                                <CardBody>\n                                    <CardText/>\n                                    <div className=\"author\">\n                                        <div className=\"block block-one\"/>\n                                        <div className=\"block block-two\"/>\n                                        <div className=\"block block-three\"/>\n                                        <div className=\"block block-four\"/>\n                                        <a onClick={e => e.preventDefault()}>\n                                            <img\n                                                alt=\"...\"\n                                                className=\"avatar\"\n                                                src={require(\"assets/img/qualidade-do-ar.png\")}\n                                                style={{border: \"none\", \"border-radius\": \"0\"}}\n                                            />\n                                            <h5 className=\"title\">{this.state.city_data.cityName}</h5>\n                                        </a>\n                                        <p className=\"description\"\n                                           style={{color: this.state.weatherData.color}}>\n                                            <b>{this.state.weatherData.category} : {this.state.weatherData.air_score}</b>\n                                        </p>\n                                        <p className=\"date\">\n                                            <b>Last update :</b> &nbsp;<h3>{this.state.weatherData.date}</h3></p>\n                                    </div>\n\n\n                                    <div className=\"author\">\n                                        <h1><b>Pollutants</b></h1>\n                                    </div>\n                                    <div className=\"button-container\">\n                                        {\n                                            this.state.weatherData.pollutants.map((pollutant) => {\n                                                return (\n                                                    <Button className=\"btn-icon btn-round\" color=\"facebook\"\n                                                            id={pollutant.display_name} onClick={this.pollutantInfo}>\n                                                        <span\n                                                            style={{\n                                                                \"font-size\": \"10px\",\n                                                                color: pollutant.aqi_information.baqi.color\n                                                            }}> {pollutant.display_name}</span>\n                                                    </Button>\n                                                )\n                                            })\n                                        }\n                                    </div>\n\n                                    <div className=\"author\">\n                                        <h1><b>Health Recommendations</b></h1>\n                                    </div>\n                                    <div className=\"card-description\" style={{\"text-align\": \"center\"}}>\n                                        {this.state.weatherData.health_recommendations}\n                                    </div>\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n                </div>\n                <Modal\n                    modalClassName=\"modal-search\"\n                    isOpen={this.state.modal}\n                    toggle={this.toggleModal}>\n\n                    <Card className=\"card-user\" style={{\"margin-bottom\": \"0px\"}}>\n                        <CardBody>\n\n                            <div className=\"author\">\n                                <div className=\"block block-one\"/>\n                                <div className=\"block block-two\"/>\n                                <div className=\"block block-three\"/>\n                                <div className=\"block block-four\"/>\n                                <Button className=\"btn-icon btn-round\" color=\"facebook\"\n                                        id={this.state.pollutantData.display_name} onClick={this.pollutantInfo}\n                                        style={{width: \"100px\", height: \"100px\", \"border-radius\": \"50%\"}}>\n                                                        <span\n                                                            style={{\n                                                                \"font-size\": \"20px\",\n                                                                color: this.state.pollutantData.color\n                                                            }}> {this.state.pollutantData.display_name}</span>\n                                </Button>\n                                <p className=\"description\">\n                                    {this.state.pollutantData.full_name}</p>\n                                <p className=\"description\"\n                                   style={{color: this.state.pollutantData.color}}>\n                                    <b>{this.state.pollutantData.concentration_value} {this.state.pollutantData.concentration_units}</b>\n                                </p>\n\n                            </div>\n                            <div className=\"author\">\n                                <b>Source</b>\n                            </div>\n                            <div className=\"card-description\" style={{\"text-align\": \"center\"}}>\n                                {this.state.pollutantData.source}\n                            </div>\n                            <div className=\"author\">\n                                <b>Effects</b>\n                            </div>\n                            <div className=\"card-description\" style={{\"text-align\": \"center\"}}>\n                                {this.state.pollutantData.effects}\n                            </div>\n                            <button\n                                aria-label=\"Close\"\n                                className=\"close\"\n                                data-dismiss=\"modal\"\n                                type=\"button\"\n                                onClick={this.toggleModal}\n                            >\n                                <i className=\"tim-icons icon-simple-remove\"/>\n                            </button>\n                        </CardBody>\n                    </Card>\n                </Modal>\n            </>\n        );\n    }\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}