{"ast":null,"code":"import _regeneratorRuntime from \"/home/noone/Desktop/TQS/Projeto1/black-dashboard-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/noone/Desktop/TQS/Projeto1/black-dashboard-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/home/noone/Desktop/TQS/Projeto1/black-dashboard-react/src/views/Historical.js\";\nimport React from \"react\"; // nodejs library that concatenates classes\n\nimport classNames from \"classnames\"; // react plugin used to create charts\n\nimport { Line, Bar } from \"react-chartjs-2\"; // reactstrap components\n\nimport { Button, ButtonGroup, Card, CardHeader, CardBody, CardTitle, DropdownToggle, DropdownMenu, DropdownItem, UncontrolledDropdown, Label, FormGroup, Input, Table, Row, Col, UncontrolledTooltip } from \"reactstrap\"; // core components\n\nimport { chartExample1, chartExample2, chartExample3, chartExample4 } from \"variables/charts.js\";\nimport axios from \"axios\";\nconst REST_HOST = process.env.REACT_APP_REST_HOST;\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.loadData = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var latitude, longitude, hours, href, _yield$axios$get, data, historical, historical_data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            latitude = 39.91177;\n            longitude = 8.43568;\n            hours = 1;\n            href = \"\".concat(REST_HOST, \"/air/history/lat=\").concat(latitude, \"&long=\").concat(longitude, \"&hours=\").concat(hours);\n            _context.next = 6;\n            return axios.get(href);\n\n          case 6:\n            _yield$axios$get = _context.sent;\n            data = _yield$axios$get.data;\n            historical = data.temporal_conditions;\n            historical_data = [];\n            historical.map(value => {\n              historical_data.push({\n                date: new Date(value.date).toLocaleString('pt-PT', {\n                  'hour12': false,\n                  'dateStyle': 'short',\n                  'timeStyle': 'short',\n                  'formatMatcher': 'best'\n                }),\n                air_score: value.air_score\n              });\n            });\n            console.log(historical_data);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    this.setBgChartData = name => {\n      this.setState({\n        bigChartData: name\n      });\n    };\n\n    this.state = {\n      bigChartData: \"data1\"\n    };\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"card-chart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: \"text-left\",\n      sm: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"card-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 45\n      }\n    }, \"Air Condition\"), /*#__PURE__*/React.createElement(CardTitle, {\n      tag: \"h2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 45\n      }\n    }, \"Historical/Forecast\")), /*#__PURE__*/React.createElement(Col, {\n      sm: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(ButtonGroup, {\n      className: \"btn-group-toggle float-right\",\n      \"data-toggle\": \"buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      tag: \"label\",\n      className: classNames(\"btn-simple\", {\n        active: this.state.bigChartData === \"data1\"\n      }),\n      color: \"info\",\n      id: \"0\",\n      size: \"sm\",\n      onClick: () => this.setBgChartData(\"data1\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      defaultChecked: true,\n      className: \"d-none\",\n      name: \"options\",\n      type: \"radio\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 53\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"d-none d-sm-block d-md-block d-lg-block d-xl-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 53\n      }\n    }, \"Accounts\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"d-block d-sm-none\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"tim-icons icon-single-02\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(Button, {\n      color: \"info\",\n      id: \"1\",\n      size: \"sm\",\n      tag: \"label\",\n      className: classNames(\"btn-simple\", {\n        active: this.state.bigChartData === \"data2\"\n      }),\n      onClick: () => this.setBgChartData(\"data2\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"d-none\",\n      name: \"options\",\n      type: \"radio\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 53\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"d-none d-sm-block d-md-block d-lg-block d-xl-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 53\n      }\n    }, \"Purchases\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"d-block d-sm-none\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"tim-icons icon-gift-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(Button, {\n      color: \"info\",\n      id: \"2\",\n      size: \"sm\",\n      tag: \"label\",\n      className: classNames(\"btn-simple\", {\n        active: this.state.bigChartData === \"data3\"\n      }),\n      onClick: () => this.setBgChartData(\"data3\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"d-none\",\n      name: \"options\",\n      type: \"radio\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 53\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"d-none d-sm-block d-md-block d-lg-block d-xl-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 53\n      }\n    }, \"Sessions\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"d-block d-sm-none\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"tim-icons icon-tap-02\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 29\n      }\n    }))))))), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chart-area\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Line, {\n      data: chartExample1[this.state.bigChartData],\n      options: chartExample1.options,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 41\n      }\n    })))))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      lg: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"card-chart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"card-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 37\n      }\n    }, \"Total Shipments\"), /*#__PURE__*/React.createElement(CardTitle, {\n      tag: \"h3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"tim-icons icon-bell-55 text-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 41\n      }\n    }), \" \", \"763,215\")), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chart-area\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Line, {\n      data: chartExample2.data,\n      options: chartExample2.options,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 41\n      }\n    }))))), /*#__PURE__*/React.createElement(Col, {\n      lg: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"card-chart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"card-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 37\n      }\n    }, \"Daily Sales\"), /*#__PURE__*/React.createElement(CardTitle, {\n      tag: \"h3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"tim-icons icon-delivery-fast text-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 41\n      }\n    }), \" \", \"3,500\\u20AC\")), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chart-area\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Bar, {\n      data: chartExample3.data,\n      options: chartExample3.options,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 41\n      }\n    }))))), /*#__PURE__*/React.createElement(Col, {\n      lg: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"card-chart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"card-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 37\n      }\n    }, \"Completed Tasks\"), /*#__PURE__*/React.createElement(CardTitle, {\n      tag: \"h3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"tim-icons icon-send text-success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 41\n      }\n    }), \" 12,100K\")), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chart-area\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Line, {\n      data: chartExample4.data,\n      options: chartExample4.options,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 41\n      }\n    }))))))));\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/noone/Desktop/TQS/Projeto1/black-dashboard-react/src/views/Historical.js"],"names":["React","classNames","Line","Bar","Button","ButtonGroup","Card","CardHeader","CardBody","CardTitle","DropdownToggle","DropdownMenu","DropdownItem","UncontrolledDropdown","Label","FormGroup","Input","Table","Row","Col","UncontrolledTooltip","chartExample1","chartExample2","chartExample3","chartExample4","axios","REST_HOST","process","env","REACT_APP_REST_HOST","Dashboard","Component","constructor","props","loadData","latitude","longitude","hours","href","get","data","historical","temporal_conditions","historical_data","map","value","push","date","Date","toLocaleString","air_score","console","log","setBgChartData","name","setState","bigChartData","state","componentDidMount","render","active","options"],"mappings":"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","sourcesContent":["import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// react plugin used to create charts\nimport {Line, Bar} from \"react-chartjs-2\";\n\n// reactstrap components\nimport {\n    Button,\n    ButtonGroup,\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem,\n    UncontrolledDropdown,\n    Label,\n    FormGroup,\n    Input,\n    Table,\n    Row,\n    Col,\n    UncontrolledTooltip\n} from \"reactstrap\";\n\n// core components\nimport {\n    chartExample1,\n    chartExample2,\n    chartExample3,\n    chartExample4\n} from \"variables/charts.js\";\nimport axios from \"axios\";\n\nconst REST_HOST = process.env.REACT_APP_REST_HOST\n\nclass Dashboard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            bigChartData: \"data1\"\n        };\n    }\n\n    componentDidMount() {\n        this.loadData();\n    }\n\n    loadData = async () => {\n        const latitude = 39.91177;\n        const longitude = 8.43568;\n        const hours = 1;\n        const href = `${REST_HOST}/air/history/lat=${latitude}&long=${longitude}&hours=${hours}`;\n        const {data} = await axios.get(href);\n\n        const historical = data.temporal_conditions;\n        const historical_data = [];\n        historical.map((value) => {\n            historical_data.push({\n                date: new Date(value.date).toLocaleString('pt-PT', {\n                    'hour12': false,\n                    'dateStyle': 'short',\n                    'timeStyle': 'short',\n                    'formatMatcher' : 'best'\n                }),\n                air_score: value.air_score\n            })\n        });\n\n        console.log(historical_data)\n    };\n\n    setBgChartData = name => {\n        this.setState({\n            bigChartData: name\n        });\n    };\n\n    render() {\n        return (\n            <>\n                <div className=\"content\">\n                    <Row>\n                        <Col xs=\"12\">\n                            <Card className=\"card-chart\">\n                                <CardHeader>\n                                    <Row>\n                                        <Col className=\"text-left\" sm=\"6\">\n                                            <h5 className=\"card-category\">Air Condition</h5>\n                                            <CardTitle tag=\"h2\">Historical/Forecast</CardTitle>\n                                        </Col>\n                                        <Col sm=\"6\">\n                                            <ButtonGroup\n                                                className=\"btn-group-toggle float-right\"\n                                                data-toggle=\"buttons\"\n                                            >\n                                                <Button\n                                                    tag=\"label\"\n                                                    className={classNames(\"btn-simple\", {\n                                                        active: this.state.bigChartData === \"data1\"\n                                                    })}\n                                                    color=\"info\"\n                                                    id=\"0\"\n                                                    size=\"sm\"\n                                                    onClick={() => this.setBgChartData(\"data1\")}\n                                                >\n                                                    <input\n                                                        defaultChecked\n                                                        className=\"d-none\"\n                                                        name=\"options\"\n                                                        type=\"radio\"\n                                                    />\n                                                    <span\n                                                        className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\n                            Accounts\n                          </span>\n                                                    <span className=\"d-block d-sm-none\">\n                            <i className=\"tim-icons icon-single-02\"/>\n                          </span>\n                                                </Button>\n                                                <Button\n                                                    color=\"info\"\n                                                    id=\"1\"\n                                                    size=\"sm\"\n                                                    tag=\"label\"\n                                                    className={classNames(\"btn-simple\", {\n                                                        active: this.state.bigChartData === \"data2\"\n                                                    })}\n                                                    onClick={() => this.setBgChartData(\"data2\")}\n                                                >\n                                                    <input\n                                                        className=\"d-none\"\n                                                        name=\"options\"\n                                                        type=\"radio\"\n                                                    />\n                                                    <span\n                                                        className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\n                            Purchases\n                          </span>\n                                                    <span className=\"d-block d-sm-none\">\n                            <i className=\"tim-icons icon-gift-2\"/>\n                          </span>\n                                                </Button>\n                                                <Button\n                                                    color=\"info\"\n                                                    id=\"2\"\n                                                    size=\"sm\"\n                                                    tag=\"label\"\n                                                    className={classNames(\"btn-simple\", {\n                                                        active: this.state.bigChartData === \"data3\"\n                                                    })}\n                                                    onClick={() => this.setBgChartData(\"data3\")}\n                                                >\n                                                    <input\n                                                        className=\"d-none\"\n                                                        name=\"options\"\n                                                        type=\"radio\"\n                                                    />\n                                                    <span\n                                                        className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\n                            Sessions\n                          </span>\n                                                    <span className=\"d-block d-sm-none\">\n                            <i className=\"tim-icons icon-tap-02\"/>\n                          </span>\n                                                </Button>\n                                            </ButtonGroup>\n                                        </Col>\n                                    </Row>\n                                </CardHeader>\n                                <CardBody>\n                                    <div className=\"chart-area\">\n                                        <Line\n                                            data={chartExample1[this.state.bigChartData]}\n                                            options={chartExample1.options}\n                                        />\n                                    </div>\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col lg=\"4\">\n                            <Card className=\"card-chart\">\n                                <CardHeader>\n                                    <h5 className=\"card-category\">Total Shipments</h5>\n                                    <CardTitle tag=\"h3\">\n                                        <i className=\"tim-icons icon-bell-55 text-info\"/>{\" \"}\n                                        763,215\n                                    </CardTitle>\n                                </CardHeader>\n                                <CardBody>\n                                    <div className=\"chart-area\">\n                                        <Line\n                                            data={chartExample2.data}\n                                            options={chartExample2.options}\n                                        />\n                                    </div>\n                                </CardBody>\n                            </Card>\n                        </Col>\n                        <Col lg=\"4\">\n                            <Card className=\"card-chart\">\n                                <CardHeader>\n                                    <h5 className=\"card-category\">Daily Sales</h5>\n                                    <CardTitle tag=\"h3\">\n                                        <i className=\"tim-icons icon-delivery-fast text-primary\"/>{\" \"}\n                                        3,500€\n                                    </CardTitle>\n                                </CardHeader>\n                                <CardBody>\n                                    <div className=\"chart-area\">\n                                        <Bar\n                                            data={chartExample3.data}\n                                            options={chartExample3.options}\n                                        />\n                                    </div>\n                                </CardBody>\n                            </Card>\n                        </Col>\n                        <Col lg=\"4\">\n                            <Card className=\"card-chart\">\n                                <CardHeader>\n                                    <h5 className=\"card-category\">Completed Tasks</h5>\n                                    <CardTitle tag=\"h3\">\n                                        <i className=\"tim-icons icon-send text-success\"/> 12,100K\n                                    </CardTitle>\n                                </CardHeader>\n                                <CardBody>\n                                    <div className=\"chart-area\">\n                                        <Line\n                                            data={chartExample4.data}\n                                            options={chartExample4.options}\n                                        />\n                                    </div>\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}