{"ast":null,"code":"// chartExample1 and chartExample2 options\nlet chart1_2_options = {\n  maintainAspectRatio: false,\n  legend: {\n    display: true\n  },\n  tooltips: {\n    backgroundColor: \"#f5f5f5\",\n    titleFontColor: \"#333\",\n    bodyFontColor: \"#666\",\n    bodySpacing: 4,\n    xPadding: 12,\n    mode: \"nearest\",\n    intersect: 0,\n    position: \"nearest\"\n  },\n  responsive: true,\n  scales: {\n    yAxes: [{\n      scaleLabel: {\n        display: true,\n        labelString: 'Air Score'\n      },\n      barPercentage: 1.6,\n      gridLines: {\n        drawBorder: false,\n        color: \"rgba(29,140,248,0.0)\",\n        zeroLineColor: \"transparent\"\n      },\n      ticks: {\n        fontColor: \"#9a9a9a\"\n      }\n    }],\n    xAxes: [{\n      barPercentage: 1.6,\n      gridLines: {\n        drawBorder: false,\n        color: \"rgba(29,140,248,0.1)\",\n        zeroLineColor: \"transparent\"\n      },\n      ticks: {\n        padding: 20,\n        fontColor: \"#9a9a9a\"\n      }\n    }]\n  }\n};\nlet chartExample1 = {\n  data1: canvas => {\n    let ctx = canvas.getContext(\"2d\");\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n\n    return {\n      labels: [\"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUN\", \"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"],\n      datasets: [{\n        label: \"My First dataset\",\n        fill: true,\n        backgroundColor: gradientStroke,\n        borderColor: \"#1f8ef1\",\n        borderWidth: 2,\n        borderDash: [],\n        borderDashOffset: 0.0,\n        pointBackgroundColor: \"#1f8ef1\",\n        pointBorderColor: \"rgba(255,255,255,0)\",\n        pointHoverBackgroundColor: \"#1f8ef1\",\n        pointBorderWidth: 20,\n        pointHoverRadius: 4,\n        pointHoverBorderWidth: 15,\n        pointRadius: 4,\n        data: [100, 70, 90, 70, 85, 60, 75, 60, 90, 80, 110, 100]\n      }]\n    };\n  },\n  data2: canvas => {\n    let ctx = canvas.getContext(\"2d\");\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n\n    return {\n      labels: [\"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUN\", \"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"],\n      datasets: [{\n        label: \"My First dataset\",\n        fill: true,\n        backgroundColor: gradientStroke,\n        borderColor: \"#1f8ef1\",\n        borderWidth: 2,\n        borderDash: [],\n        borderDashOffset: 0.0,\n        pointBackgroundColor: \"#1f8ef1\",\n        pointBorderColor: \"rgba(255,255,255,0)\",\n        pointHoverBackgroundColor: \"#1f8ef1\",\n        pointBorderWidth: 20,\n        pointHoverRadius: 4,\n        pointHoverBorderWidth: 15,\n        pointRadius: 4,\n        data: [80, 120, 105, 110, 95, 105, 90, 100, 80, 95, 70, 120]\n      }]\n    };\n  },\n  data3: canvas => {\n    let ctx = canvas.getContext(\"2d\");\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n\n    return {\n      labels: [\"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUN\", \"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"],\n      datasets: [{\n        label: \"My First dataset\",\n        fill: true,\n        backgroundColor: gradientStroke,\n        borderColor: \"#1f8ef1\",\n        borderWidth: 2,\n        borderDash: [],\n        borderDashOffset: 0.0,\n        pointBackgroundColor: \"#1f8ef1\",\n        pointBorderColor: \"rgba(255,255,255,0)\",\n        pointHoverBackgroundColor: \"#1f8ef1\",\n        pointBorderWidth: 20,\n        pointHoverRadius: 4,\n        pointHoverBorderWidth: 15,\n        pointRadius: 4,\n        data: [60, 80, 65, 130, 80, 105, 90, 130, 70, 115, 60, 130]\n      }]\n    };\n  },\n  options: chart1_2_options\n}; // #########################################\n// // // used inside src/views/Dashboard.js\n// #########################################\n\nlet chartExample2 = {\n  data: canvas => {\n    let ctx = canvas.getContext(\"2d\");\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n\n    return {\n      labels: [\"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"],\n      datasets: [{\n        label: \"Data\",\n        fill: true,\n        backgroundColor: gradientStroke,\n        borderColor: \"#1f8ef1\",\n        borderWidth: 2,\n        borderDash: [],\n        borderDashOffset: 0.0,\n        pointBackgroundColor: \"#1f8ef1\",\n        pointBorderColor: \"rgba(255,255,255,0)\",\n        pointHoverBackgroundColor: \"#1f8ef1\",\n        pointBorderWidth: 20,\n        pointHoverRadius: 4,\n        pointHoverBorderWidth: 15,\n        pointRadius: 4,\n        data: [80, 100, 70, 80, 120, 80]\n      }]\n    };\n  },\n  options: chart1_2_options\n}; // #########################################\n// // // used inside src/views/Dashboard.js\n// #########################################\n\nlet chartExample3 = {\n  data: canvas => {\n    let ctx = canvas.getContext(\"2d\");\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n    gradientStroke.addColorStop(1, \"rgba(72,72,176,0.1)\");\n    gradientStroke.addColorStop(0.4, \"rgba(72,72,176,0.0)\");\n    gradientStroke.addColorStop(0, \"rgba(119,52,169,0)\"); //purple colors\n\n    return {\n      labels: [\"USA\", \"GER\", \"AUS\", \"UK\", \"RO\", \"BR\"],\n      datasets: [{\n        label: \"Countries\",\n        fill: true,\n        backgroundColor: gradientStroke,\n        hoverBackgroundColor: gradientStroke,\n        borderColor: \"#d048b6\",\n        borderWidth: 2,\n        borderDash: [],\n        borderDashOffset: 0.0,\n        data: [53, 20, 10, 80, 100, 45]\n      }]\n    };\n  },\n  options: {\n    maintainAspectRatio: false,\n    legend: {\n      display: false\n    },\n    tooltips: {\n      backgroundColor: \"#f5f5f5\",\n      titleFontColor: \"#333\",\n      bodyFontColor: \"#666\",\n      bodySpacing: 4,\n      xPadding: 12,\n      mode: \"nearest\",\n      intersect: 0,\n      position: \"nearest\"\n    },\n    responsive: true,\n    scales: {\n      yAxes: [{\n        gridLines: {\n          drawBorder: false,\n          color: \"rgba(225,78,202,0.1)\",\n          zeroLineColor: \"transparent\"\n        },\n        ticks: {\n          suggestedMin: 60,\n          suggestedMax: 120,\n          padding: 20,\n          fontColor: \"#9e9e9e\"\n        }\n      }],\n      xAxes: [{\n        gridLines: {\n          drawBorder: false,\n          color: \"rgba(225,78,202,0.1)\",\n          zeroLineColor: \"transparent\"\n        },\n        ticks: {\n          padding: 20,\n          fontColor: \"#9e9e9e\"\n        }\n      }]\n    }\n  }\n}; // #########################################\n// // // used inside src/views/Dashboard.js\n// #########################################\n\nconst chartExample4 = {\n  data: canvas => {\n    let ctx = canvas.getContext(\"2d\");\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n    gradientStroke.addColorStop(1, \"rgba(66,134,121,0.15)\");\n    gradientStroke.addColorStop(0.4, \"rgba(66,134,121,0.0)\"); //green colors\n\n    gradientStroke.addColorStop(0, \"rgba(66,134,121,0)\"); //green colors\n\n    return {\n      labels: [\"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\"],\n      datasets: [{\n        label: \"My First dataset\",\n        fill: true,\n        backgroundColor: gradientStroke,\n        borderColor: \"#00d6b4\",\n        borderWidth: 2,\n        borderDash: [],\n        borderDashOffset: 0.0,\n        pointBackgroundColor: \"#00d6b4\",\n        pointBorderColor: \"rgba(255,255,255,0)\",\n        pointHoverBackgroundColor: \"#00d6b4\",\n        pointBorderWidth: 20,\n        pointHoverRadius: 4,\n        pointHoverBorderWidth: 15,\n        pointRadius: 4,\n        data: [90, 27, 60, 12, 80]\n      }]\n    };\n  },\n  options: {\n    maintainAspectRatio: false,\n    legend: {\n      display: false\n    },\n    tooltips: {\n      backgroundColor: \"#f5f5f5\",\n      titleFontColor: \"#333\",\n      bodyFontColor: \"#666\",\n      bodySpacing: 4,\n      xPadding: 12,\n      mode: \"nearest\",\n      intersect: 0,\n      position: \"nearest\"\n    },\n    responsive: true,\n    scales: {\n      yAxes: [{\n        barPercentage: 1.6,\n        gridLines: {\n          drawBorder: false,\n          color: \"rgba(29,140,248,0.0)\",\n          zeroLineColor: \"transparent\"\n        },\n        ticks: {\n          suggestedMin: 50,\n          suggestedMax: 125,\n          padding: 20,\n          fontColor: \"#9e9e9e\"\n        }\n      }],\n      xAxes: [{\n        barPercentage: 1.6,\n        gridLines: {\n          drawBorder: false,\n          color: \"rgba(0,242,195,0.1)\",\n          zeroLineColor: \"transparent\"\n        },\n        ticks: {\n          padding: 20,\n          fontColor: \"#9e9e9e\"\n        }\n      }]\n    }\n  }\n};\nmodule.exports = {\n  chartExample1,\n  // in src/views/Dashboard.js\n  chartExample2,\n  // in src/views/Dashboard.js\n  chartExample3,\n  // in src/views/Dashboard.js\n  chartExample4 // in src/views/Dashboard.js\n\n};","map":{"version":3,"sources":["/home/noone/Desktop/TQS/Projeto1/black-dashboard-react/src/variables/charts.js"],"names":["chart1_2_options","maintainAspectRatio","legend","display","tooltips","backgroundColor","titleFontColor","bodyFontColor","bodySpacing","xPadding","mode","intersect","position","responsive","scales","yAxes","scaleLabel","labelString","barPercentage","gridLines","drawBorder","color","zeroLineColor","ticks","fontColor","xAxes","padding","chartExample1","data1","canvas","ctx","getContext","gradientStroke","createLinearGradient","addColorStop","labels","datasets","label","fill","borderColor","borderWidth","borderDash","borderDashOffset","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointRadius","data","data2","data3","options","chartExample2","chartExample3","hoverBackgroundColor","suggestedMin","suggestedMax","chartExample4","module","exports"],"mappings":"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","sourcesContent":["// chartExample1 and chartExample2 options\nlet chart1_2_options = {\n    maintainAspectRatio: false,\n    legend: {\n        display: true\n    },\n    tooltips: {\n        backgroundColor: \"#f5f5f5\",\n        titleFontColor: \"#333\",\n        bodyFontColor: \"#666\",\n        bodySpacing: 4,\n        xPadding: 12,\n        mode: \"nearest\",\n        intersect: 0,\n        position: \"nearest\"\n    },\n    responsive: true,\n    scales: {\n        yAxes: [\n            {\n                scaleLabel: {\n                    display: true,\n                    labelString: 'Air Score'\n                },\n                barPercentage: 1.6,\n                gridLines: {\n                    drawBorder: false,\n                    color: \"rgba(29,140,248,0.0)\",\n                    zeroLineColor: \"transparent\"\n                },\n                ticks: {\n                    fontColor: \"#9a9a9a\"\n                }\n            }\n        ],\n        xAxes: [\n            {\n                barPercentage: 1.6,\n                gridLines: {\n                    drawBorder: false,\n                    color: \"rgba(29,140,248,0.1)\",\n                    zeroLineColor: \"transparent\"\n                },\n                ticks: {\n                    padding: 20,\n                    fontColor: \"#9a9a9a\"\n                }\n            }\n        ]\n    }\n};\n\n\nlet chartExample1 = {\n    data1: canvas => {\n        let ctx = canvas.getContext(\"2d\");\n\n        let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n        gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n        gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n        gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n\n        return {\n            labels: [\n                \"JAN\",\n                \"FEB\",\n                \"MAR\",\n                \"APR\",\n                \"MAY\",\n                \"JUN\",\n                \"JUL\",\n                \"AUG\",\n                \"SEP\",\n                \"OCT\",\n                \"NOV\",\n                \"DEC\"\n            ],\n            datasets: [\n                {\n                    label: \"My First dataset\",\n                    fill: true,\n                    backgroundColor: gradientStroke,\n                    borderColor: \"#1f8ef1\",\n                    borderWidth: 2,\n                    borderDash: [],\n                    borderDashOffset: 0.0,\n                    pointBackgroundColor: \"#1f8ef1\",\n                    pointBorderColor: \"rgba(255,255,255,0)\",\n                    pointHoverBackgroundColor: \"#1f8ef1\",\n                    pointBorderWidth: 20,\n                    pointHoverRadius: 4,\n                    pointHoverBorderWidth: 15,\n                    pointRadius: 4,\n                    data: [100, 70, 90, 70, 85, 60, 75, 60, 90, 80, 110, 100]\n                }\n            ]\n        };\n    },\n    data2: canvas => {\n        let ctx = canvas.getContext(\"2d\");\n\n        let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n        gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n        gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n        gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n\n        return {\n            labels: [\n                \"JAN\",\n                \"FEB\",\n                \"MAR\",\n                \"APR\",\n                \"MAY\",\n                \"JUN\",\n                \"JUL\",\n                \"AUG\",\n                \"SEP\",\n                \"OCT\",\n                \"NOV\",\n                \"DEC\"\n            ],\n            datasets: [\n                {\n                    label: \"My First dataset\",\n                    fill: true,\n                    backgroundColor: gradientStroke,\n                    borderColor: \"#1f8ef1\",\n                    borderWidth: 2,\n                    borderDash: [],\n                    borderDashOffset: 0.0,\n                    pointBackgroundColor: \"#1f8ef1\",\n                    pointBorderColor: \"rgba(255,255,255,0)\",\n                    pointHoverBackgroundColor: \"#1f8ef1\",\n                    pointBorderWidth: 20,\n                    pointHoverRadius: 4,\n                    pointHoverBorderWidth: 15,\n                    pointRadius: 4,\n                    data: [80, 120, 105, 110, 95, 105, 90, 100, 80, 95, 70, 120]\n                }\n            ]\n        };\n    },\n    data3: canvas => {\n        let ctx = canvas.getContext(\"2d\");\n\n        let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n        gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n        gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n        gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n\n        return {\n            labels: [\n                \"JAN\",\n                \"FEB\",\n                \"MAR\",\n                \"APR\",\n                \"MAY\",\n                \"JUN\",\n                \"JUL\",\n                \"AUG\",\n                \"SEP\",\n                \"OCT\",\n                \"NOV\",\n                \"DEC\"\n            ],\n            datasets: [\n                {\n                    label: \"My First dataset\",\n                    fill: true,\n                    backgroundColor: gradientStroke,\n                    borderColor: \"#1f8ef1\",\n                    borderWidth: 2,\n                    borderDash: [],\n                    borderDashOffset: 0.0,\n                    pointBackgroundColor: \"#1f8ef1\",\n                    pointBorderColor: \"rgba(255,255,255,0)\",\n                    pointHoverBackgroundColor: \"#1f8ef1\",\n                    pointBorderWidth: 20,\n                    pointHoverRadius: 4,\n                    pointHoverBorderWidth: 15,\n                    pointRadius: 4,\n                    data: [60, 80, 65, 130, 80, 105, 90, 130, 70, 115, 60, 130]\n                }\n            ]\n        };\n    },\n    options: chart1_2_options\n};\n\n// #########################################\n// // // used inside src/views/Dashboard.js\n// #########################################\nlet chartExample2 = {\n    data: canvas => {\n        let ctx = canvas.getContext(\"2d\");\n\n        let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n        gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n        gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n        gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n\n        return {\n            labels: [\"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"],\n            datasets: [\n                {\n                    label: \"Data\",\n                    fill: true,\n                    backgroundColor: gradientStroke,\n                    borderColor: \"#1f8ef1\",\n                    borderWidth: 2,\n                    borderDash: [],\n                    borderDashOffset: 0.0,\n                    pointBackgroundColor: \"#1f8ef1\",\n                    pointBorderColor: \"rgba(255,255,255,0)\",\n                    pointHoverBackgroundColor: \"#1f8ef1\",\n                    pointBorderWidth: 20,\n                    pointHoverRadius: 4,\n                    pointHoverBorderWidth: 15,\n                    pointRadius: 4,\n                    data: [80, 100, 70, 80, 120, 80]\n                }\n            ]\n        };\n    },\n    options: chart1_2_options\n};\n\n// #########################################\n// // // used inside src/views/Dashboard.js\n// #########################################\nlet chartExample3 = {\n    data: canvas => {\n        let ctx = canvas.getContext(\"2d\");\n\n        let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n        gradientStroke.addColorStop(1, \"rgba(72,72,176,0.1)\");\n        gradientStroke.addColorStop(0.4, \"rgba(72,72,176,0.0)\");\n        gradientStroke.addColorStop(0, \"rgba(119,52,169,0)\"); //purple colors\n\n        return {\n            labels: [\"USA\", \"GER\", \"AUS\", \"UK\", \"RO\", \"BR\"],\n            datasets: [\n                {\n                    label: \"Countries\",\n                    fill: true,\n                    backgroundColor: gradientStroke,\n                    hoverBackgroundColor: gradientStroke,\n                    borderColor: \"#d048b6\",\n                    borderWidth: 2,\n                    borderDash: [],\n                    borderDashOffset: 0.0,\n                    data: [53, 20, 10, 80, 100, 45]\n                }\n            ]\n        };\n    },\n    options: {\n        maintainAspectRatio: false,\n        legend: {\n            display: false\n        },\n        tooltips: {\n            backgroundColor: \"#f5f5f5\",\n            titleFontColor: \"#333\",\n            bodyFontColor: \"#666\",\n            bodySpacing: 4,\n            xPadding: 12,\n            mode: \"nearest\",\n            intersect: 0,\n            position: \"nearest\"\n        },\n        responsive: true,\n        scales: {\n            yAxes: [\n                {\n                    gridLines: {\n                        drawBorder: false,\n                        color: \"rgba(225,78,202,0.1)\",\n                        zeroLineColor: \"transparent\"\n                    },\n                    ticks: {\n                        suggestedMin: 60,\n                        suggestedMax: 120,\n                        padding: 20,\n                        fontColor: \"#9e9e9e\"\n                    }\n                }\n            ],\n            xAxes: [\n                {\n                    gridLines: {\n                        drawBorder: false,\n                        color: \"rgba(225,78,202,0.1)\",\n                        zeroLineColor: \"transparent\"\n                    },\n                    ticks: {\n                        padding: 20,\n                        fontColor: \"#9e9e9e\"\n                    }\n                }\n            ]\n        }\n    }\n};\n\n// #########################################\n// // // used inside src/views/Dashboard.js\n// #########################################\nconst chartExample4 = {\n    data: canvas => {\n        let ctx = canvas.getContext(\"2d\");\n\n        let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n        gradientStroke.addColorStop(1, \"rgba(66,134,121,0.15)\");\n        gradientStroke.addColorStop(0.4, \"rgba(66,134,121,0.0)\"); //green colors\n        gradientStroke.addColorStop(0, \"rgba(66,134,121,0)\"); //green colors\n\n        return {\n            labels: [\"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\"],\n            datasets: [\n                {\n                    label: \"My First dataset\",\n                    fill: true,\n                    backgroundColor: gradientStroke,\n                    borderColor: \"#00d6b4\",\n                    borderWidth: 2,\n                    borderDash: [],\n                    borderDashOffset: 0.0,\n                    pointBackgroundColor: \"#00d6b4\",\n                    pointBorderColor: \"rgba(255,255,255,0)\",\n                    pointHoverBackgroundColor: \"#00d6b4\",\n                    pointBorderWidth: 20,\n                    pointHoverRadius: 4,\n                    pointHoverBorderWidth: 15,\n                    pointRadius: 4,\n                    data: [90, 27, 60, 12, 80]\n                }\n            ]\n        };\n    },\n    options: {\n        maintainAspectRatio: false,\n        legend: {\n            display: false\n        },\n\n        tooltips: {\n            backgroundColor: \"#f5f5f5\",\n            titleFontColor: \"#333\",\n            bodyFontColor: \"#666\",\n            bodySpacing: 4,\n            xPadding: 12,\n            mode: \"nearest\",\n            intersect: 0,\n            position: \"nearest\"\n        },\n        responsive: true,\n        scales: {\n            yAxes: [\n                {\n                    barPercentage: 1.6,\n                    gridLines: {\n                        drawBorder: false,\n                        color: \"rgba(29,140,248,0.0)\",\n                        zeroLineColor: \"transparent\"\n                    },\n                    ticks: {\n                        suggestedMin: 50,\n                        suggestedMax: 125,\n                        padding: 20,\n                        fontColor: \"#9e9e9e\"\n                    }\n                }\n            ],\n\n            xAxes: [\n                {\n                    barPercentage: 1.6,\n                    gridLines: {\n                        drawBorder: false,\n                        color: \"rgba(0,242,195,0.1)\",\n                        zeroLineColor: \"transparent\"\n                    },\n                    ticks: {\n                        padding: 20,\n                        fontColor: \"#9e9e9e\"\n                    }\n                }\n            ]\n        }\n    }\n};\n\nmodule.exports = {\n    chartExample1, // in src/views/Dashboard.js\n    chartExample2, // in src/views/Dashboard.js\n    chartExample3, // in src/views/Dashboard.js\n    chartExample4 // in src/views/Dashboard.js\n};\n"]},"metadata":{},"sourceType":"module"}